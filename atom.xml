<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wenyu&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tianwenyu.github.io/"/>
  <updated>2018-02-27T07:52:36.037Z</updated>
  <id>https://tianwenyu.github.io/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo常见问题解决方法</title>
    <link href="https://tianwenyu.github.io/hexo-solve/"/>
    <id>https://tianwenyu.github.io/hexo-solve/</id>
    <published>2018-02-27T11:29:36.000Z</published>
    <updated>2018-02-27T07:52:36.037Z</updated>
    
    <content type="html"><![CDATA[<h2 id="fatal-HttpRequestException-encountered"><a href="#fatal-HttpRequestException-encountered" class="headerlink" title="fatal: HttpRequestException encountered."></a>fatal: HttpRequestException encountered.</h2><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180227/B88KJ5L618.png?imageslim" alt="mark"></p><p>将<code>_config.yml</code>中的<code>repository: https://github.com:username/username.github.io.git</code></p><p>改成<code>repository: git@github.com:username/username.github.io.git</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;fatal-HttpRequestException-encountered&quot;&gt;&lt;a href=&quot;#fatal-HttpRequestException-encountered&quot; class=&quot;headerlink&quot; title=&quot;fatal: HttpReque
      
    
    </summary>
    
      <category term="个人建站" scheme="https://tianwenyu.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="Hexo" scheme="https://tianwenyu.github.io/tags/Hexo/"/>
    
      <category term="GitPage" scheme="https://tianwenyu.github.io/tags/GitPage/"/>
    
  </entry>
  
  <entry>
    <title>Windows下安装Jupyter Notebook</title>
    <link href="https://tianwenyu.github.io/windows-jupyter-notebook/"/>
    <id>https://tianwenyu.github.io/windows-jupyter-notebook/</id>
    <published>2018-02-09T12:29:30.000Z</published>
    <updated>2018-02-27T07:36:03.140Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="文学编程"><a href="#文学编程" class="headerlink" title="文学编程"></a>文学编程</h3><p>文学编程(Literate Programming)是由Donald Knuth提出的编程方法。传统的结构化编程，人要按照计算机的逻辑顺序来编写代码，而文学编程则可以让人们按照自己的逻辑来开发程序。</p><h3 id="Jupyter-Notebook"><a href="#Jupyter-Notebook" class="headerlink" title="Jupyter Notebook"></a>Jupyter Notebook</h3><p><code>Jupyter Notebook</code>是一个交互式笔记本，支持运行40多种编程语言。它的本质是一个Web应用程序，便于创建和共享文学化程序文档，支持实时代码、数学方程、可视化和markdown。</p><p><code>Jupyter Notebook</code>优点：</p><ul><li>适合数据分析</li><li>支持多语言</li><li>分享便捷</li><li>远程运行</li><li>交互式展示<a id="more"></a></li></ul><p>##安装</p><p>安装Anaconda即自带，不需要安装</p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>点击<code>Jupyter Notebook</code>即可启动，或在cmd中输入<code>jupyter notebook</code></p><p>默认地址为<code>http:localhost:8888</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180214/I4lBa3iCj3.png?imageslim" alt="mark"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="更改Jupyter-Notebook工作空间"><a href="#更改Jupyter-Notebook工作空间" class="headerlink" title="更改Jupyter Notebook工作空间"></a>更改Jupyter Notebook工作空间</h3><p>最新版<code>Ipython</code>和<code>Jupyter</code>配置文件是分开的，需要分别配置文件。</p><ol><li><p>打开cmd输入命令<code>jupyter notebook --generate-config</code></p><p>【注】<code>-config</code>之前没有空格</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180214/8DC86687KH.png?imageslim" alt="mark"></p></li><li><p>打开该目录下的文件，改文件夹路径</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180214/lea2G5JDa7.png?imageslim" alt="mark"></p><p>【注】若存在编码问题，可改成<code>f://file//jupyter_notebook</code></p></li><li><p>启动<code>Jupyter Notebook</code></p></li></ol><h3 id="新建Notebook"><a href="#新建Notebook" class="headerlink" title="新建Notebook"></a>新建Notebook</h3><p>点击<code>new</code>创建新的<code>Notebook</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180214/CKGCg8a3h8.png?imageslim" alt="mark"></p><h3 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h3><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180214/K3eK1Lc3FH.png?imageslim" alt="mark"></p><p>菜单栏各项功能概述</p><ul><li><code>File</code><ul><li><code>Save and Checkpoint</code> 保存并记录点，类似于不同版本</li><li><code>Revert to Checkpoint</code>返回到某一记录点</li></ul></li><li><code>View</code><ul><li><code>Toggle Header</code>是否显示头部信息，包括文件名和上次保存时间</li><li><code>Toggle ToolBar</code>是否显示工具栏</li></ul></li><li><code>Kernel</code><ul><li><code>Change kernel</code>更换内核环境</li></ul></li></ul><p>Notebook文档由一系列<code>单元(cell)</code>,主要有两种形式的单元：</p><ul><li>代码状态单元：编写代码的区域，使用<code>Shift+Enter</code>运行代码，结果显示在本单元下方。代码单元左边有<code>In[1]：</code>类似的序列标记，方便人们查看代码的执行次序。</li><li>Markdown状态单元：编写文本的区域，使用<code>Shift+Enter</code>显示格式化的文本。</li></ul><h3 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h3><ul><li>编辑模式：编辑文本和代码。选中单元按<code>Enter</code>进入编辑模式，单元左侧显示绿色竖线</li><li>命令模式：执行输入的命令。按<code>Esc</code>进入命令模式，单元左侧显示蓝色竖线</li></ul><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><h4 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h4><ul><li>查看快捷键：<code>H</code></li></ul><ul><li>执行当前单元，并自动跳到下一个单元：<code>Shift+Enter</code></li><li>执行当前单元，不自动跳到下一个单元：<code>Ctrl+Enter</code></li><li>进入编辑模式：<code>Enter</code></li><li>进入命令模式：<code>Esc</code></li><li>删除当前单元：<code>双击D</code></li><li>变为代码状态：<code>Y</code></li><li>变为Markdown状态：<code>M</code></li><li>在下方插入新单元：<code>B</code></li><li>剪切选中单元：<code>X</code></li><li>复制选中单元：<code>C</code></li><li>粘贴到下方单元：<code>V</code></li><li>选中上方单元：<code>J</code></li><li>选中下方单元：<code>K</code></li><li>恢复删除的最后一个单元：<code>Z</code></li><li>保存当前Notebook：<code>Ctrl+S</code></li></ul><h4 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h4><ul><li>代码缩进或补全：<code>Tab</code></li><li>代码提示：<code>Shift+Tab</code></li><li>注释：<code>Ctrl+/</code></li></ul><h3 id="Magic命令"><a href="#Magic命令" class="headerlink" title="Magic命令"></a>Magic命令</h3><p><code>Magic命令</code>以<code>%</code>或<code>%%</code>开头</p><ul><li><code>%</code>：行命令</li><li><code>%%</code>：单元命令。必须出现在单元第一行。</li></ul><p>以下为常用<code>Magic命令</code></p><ul><li><code>%lsmagic</code>：列举所有Magic命令</li><li><code>%magic</code>：查看Magic命令说明</li><li><code>%timeit</code>：代码运行时间</li><li><code>%matplotlib inline</code>：显示matplotlib包生成的图形</li></ul><h2 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h2><h3 id="运行Python文件"><a href="#运行Python文件" class="headerlink" title="运行Python文件"></a>运行Python文件</h3><p>运行以下命令</p><p><code>%run xxx.py</code></p><p>【注】<code>xxx.py</code>是当前工作空间下的一个python文件</p><h3 id="导入代码"><a href="#导入代码" class="headerlink" title="导入代码"></a>导入代码</h3><p>运行以下命令</p><p><code>%load xxx.py</code></p><p>【注】<code>xxx.py</code>是当前工作空间下的一个python文件 </p><h3 id="重置单元格序号"><a href="#重置单元格序号" class="headerlink" title="重置单元格序号"></a>重置单元格序号</h3><p>重置单元格<code>In[x]</code>序号</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180215/Ah0H7D7G9m.png?imageslim" alt="mark"></p><p>点击<code>Kernel-Restart</code>即可。</p><h3 id="使用Seaborn绘图"><a href="#使用Seaborn绘图" class="headerlink" title="使用Seaborn绘图"></a>使用<code>Seaborn</code>绘图</h3><p>需要使用<code>%matplotlib inline</code>命令。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;h3 id=&quot;文学编程&quot;&gt;&lt;a href=&quot;#文学编程&quot; class=&quot;headerlink&quot; title=&quot;文学编程&quot;&gt;&lt;/a&gt;文学编程&lt;/h3&gt;&lt;p&gt;文学编程(Literate Programming)是由Donald Knuth提出的编程方法。传统的结构化编程，人要按照计算机的逻辑顺序来编写代码，而文学编程则可以让人们按照自己的逻辑来开发程序。&lt;/p&gt;
&lt;h3 id=&quot;Jupyter-Notebook&quot;&gt;&lt;a href=&quot;#Jupyter-Notebook&quot; class=&quot;headerlink&quot; title=&quot;Jupyter Notebook&quot;&gt;&lt;/a&gt;Jupyter Notebook&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Jupyter Notebook&lt;/code&gt;是一个交互式笔记本，支持运行40多种编程语言。它的本质是一个Web应用程序，便于创建和共享文学化程序文档，支持实时代码、数学方程、可视化和markdown。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Jupyter Notebook&lt;/code&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;适合数据分析&lt;/li&gt;
&lt;li&gt;支持多语言&lt;/li&gt;
&lt;li&gt;分享便捷&lt;/li&gt;
&lt;li&gt;远程运行&lt;/li&gt;
&lt;li&gt;交互式展示
    
    </summary>
    
      <category term="机器学习" scheme="https://tianwenyu.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Notebook" scheme="https://tianwenyu.github.io/tags/Notebook/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下安装Anaconda</title>
    <link href="https://tianwenyu.github.io/ubuntu-ancaconda/"/>
    <id>https://tianwenyu.github.io/ubuntu-ancaconda/</id>
    <published>2018-02-09T12:29:30.000Z</published>
    <updated>2018-02-27T07:29:31.087Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Anaconda安装"><a href="#Anaconda安装" class="headerlink" title="Anaconda安装"></a>Anaconda安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>使用<code>Python3.6</code>版本的<code>Anaconda 5.1</code>，<a href="https://repo.continuum.io/archive/Anaconda3-5.1.0-Linux-x86_64.sh" target="_blank" rel="external">点击下载</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>进入到下载后的文件目录，执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash Anaconda3-5.1.0-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>根据提示输入回车</p><p><img src="http://img.blog.csdn.net/20170628223151678?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjMxODA3NA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p></li><li><p>查看注册信息，一直回车到输入<code>yes</code></p><p><img src="http://img.blog.csdn.net/20170628223509298?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjMxODA3NA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p><p><img src="http://img.blog.csdn.net/20170628223600909?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjMxODA3NA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p></li><li><p>输入安装目录路径，默认回车即可</p><p><img src="http://img.blog.csdn.net/20170628223649697?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjMxODA3NA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p></li><li><p>是否加入环境变量，输入<code>yes</code></p><p><img src="http://img.blog.csdn.net/20170628223754787?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjMxODA3NA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="img"></p></li><li><p>安装成功后，新打开一个终端输入以下命令查看版本号</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">anaconda -V</span><br></pre></td></tr></table></figure></li></ol><h2 id="使用Jupyter-Notebook"><a href="#使用Jupyter-Notebook" class="headerlink" title="使用Jupyter Notebook"></a>使用Jupyter Notebook</h2><p>输入以下命令则能够使用<code>Jupyter Notebook</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipython notebook</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Anaconda安装&quot;&gt;&lt;a href=&quot;#Anaconda安装&quot; class=&quot;headerlink&quot; title=&quot;Anaconda安装&quot;&gt;&lt;/a&gt;Anaconda安装&lt;/h2&gt;&lt;h3 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;Python3.6&lt;/code&gt;版本的&lt;code&gt;Anaconda 5.1&lt;/code&gt;，&lt;a href=&quot;https://repo.continuum.io/archive/Anaconda3-5.1.0-Linux-x86_64.sh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击下载&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入到下载后的文件目录，执行&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bash Anaconda3-5.1.0-Linux-x86_64.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://tianwenyu.github.io/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="https://tianwenyu.github.io/tags/Ubuntu/"/>
    
      <category term="Anaconda" scheme="https://tianwenyu.github.io/tags/Anaconda/"/>
    
  </entry>
  
  <entry>
    <title>【Python Trick】Python中字典常用方法</title>
    <link href="https://tianwenyu.github.io/python-dict/"/>
    <id>https://tianwenyu.github.io/python-dict/</id>
    <published>2018-02-08T12:29:30.000Z</published>
    <updated>2018-02-27T07:28:34.151Z</updated>
    
    <content type="html"><![CDATA[<h2 id="字典常用操作"><a href="#字典常用操作" class="headerlink" title="字典常用操作"></a>字典常用操作</h2><h3 id="定义空字典"><a href="#定义空字典" class="headerlink" title="定义空字典"></a>定义空字典</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dic=&#123;&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="键值对的添加"><a href="#键值对的添加" class="headerlink" title="键值对的添加"></a>键值对的添加</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dic[<span class="string">'name'</span>]=<span class="string">'zhangsan'</span></span><br></pre></td></tr></table></figure><h2 id="字典遍历"><a href="#字典遍历" class="headerlink" title="字典遍历"></a>字典遍历</h2><p>通过<code>items()</code>方法返回的元组列表进行序列解包</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> dic.items():</span><br><span class="line">    print(<span class="string">'&#123;&#125;:&#123;&#125;'</span>.format(key,value))</span><br><span class="line">    <span class="comment">#print('%s:%s' %(key,value))</span></span><br></pre></td></tr></table></figure><h2 id="字典排序"><a href="#字典排序" class="headerlink" title="字典排序"></a>字典排序</h2><h3 id="字典按键排序"><a href="#字典按键排序" class="headerlink" title="字典按键排序"></a>字典按键排序</h3><h4 id="第一类"><a href="#第一类" class="headerlink" title="第一类"></a>第一类</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dic=&#123;</span><br><span class="line">    <span class="string">"key1"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">"key2"</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="string">"key3"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="string">"key4"</span>: <span class="number">3</span>,</span><br><span class="line">&#125;</span><br><span class="line">print(key,dic[key] <span class="keyword">for</span> key <span class="keyword">in</span> sorted(dic.keys))</span><br></pre></td></tr></table></figure><h4 id="第二类"><a href="#第二类" class="headerlink" title="第二类"></a>第二类</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dic=&#123;</span><br><span class="line">    <span class="string">"key1"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">"key2"</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="string">"key3"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="string">"key4"</span>: <span class="number">3</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#升序排序</span></span><br><span class="line">dic=dict(sorted(dic.items(),key=<span class="keyword">lambda</span> x:x[<span class="number">0</span>]))</span><br><span class="line"><span class="comment">#降序排序</span></span><br><span class="line">dic=dict(sorted(dic.itmes(),key=<span class="keyword">lambda</span> x:x[<span class="number">0</span>],reverse=<span class="keyword">True</span>))</span><br></pre></td></tr></table></figure><p><code>sorted(iterable,key,reverse)</code></p><ul><li><code>iterable</code>参数代表可以迭代的对象，例如可以是<code>dict.items()</code>，<code>dict.keys()</code></li><li><code>key</code>参数是一个函数，用来选取参与比较的元素</li><li><code>reverse</code>参数用来指定是升序还是降序</li></ul><p><code>dic=dict(sorted(dic.items(),key=lambda x:x[0]))</code></p><ul><li><p><code>dic.items()</code>将<code>dic</code>转换为可迭代对象，迭代对象的元素为该字典元素，将其转换为元组</p></li><li><p>key参数对应的lambda表达式即选取元组中的第一个元素作为比较参数，即键。</p><p><code>lambda x:y</code>x表示输出参数，y表示lambda函数的返回值.</p></li><li><p><code>sorted()</code>函数返回值是list类型。</p></li></ul><h3 id="字典按值排序并输出Top-K个元素"><a href="#字典按值排序并输出Top-K个元素" class="headerlink" title="字典按值排序并输出Top K个元素"></a>字典按值排序并输出Top K个元素</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dic=&#123;</span><br><span class="line">    <span class="string">"key1"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">"key2"</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="string">"key3"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="string">"key4"</span>: <span class="number">3</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#升序排序</span></span><br><span class="line">dic=dict(sorted(dic.items(),key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>]))</span><br><span class="line"><span class="comment">#降序排序</span></span><br><span class="line">dic=dict(sorted(dic.itmes(),key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>],reverse=<span class="keyword">True</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出Top K个</span></span><br><span class="line">cnt=<span class="number">0</span></span><br><span class="line">k=<span class="number">10</span></span><br><span class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> dic.items():</span><br><span class="line">    cnt+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> cnt&gt;k:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">'&#123;&#125;:&#123;&#125;'</span>.format(key,value))</span><br></pre></td></tr></table></figure><h2 id="字典对象写入Json文件"><a href="#字典对象写入Json文件" class="headerlink" title="字典对象写入Json文件"></a>字典对象写入Json文件</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line">dic=&#123;</span><br><span class="line">    <span class="string">"key1"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">"key2"</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="string">"key3"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="string">"key4"</span>: <span class="number">3</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#中文字符需要设置ensure_ascii属性为False，否则输出为ASII码</span></span><br><span class="line">data=json.dumps(dic,ensure_ascii=<span class="keyword">False</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'xxx.json'</span>,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(data)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;字典常用操作&quot;&gt;&lt;a href=&quot;#字典常用操作&quot; class=&quot;headerlink&quot; title=&quot;字典常用操作&quot;&gt;&lt;/a&gt;字典常用操作&lt;/h2&gt;&lt;h3 id=&quot;定义空字典&quot;&gt;&lt;a href=&quot;#定义空字典&quot; class=&quot;headerlink&quot; title=&quot;定义空字典&quot;&gt;&lt;/a&gt;定义空字典&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dic=&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python" scheme="https://tianwenyu.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://tianwenyu.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>武大植物分布</title>
    <link href="https://tianwenyu.github.io/whu-plants/"/>
    <id>https://tianwenyu.github.io/whu-plants/</id>
    <published>2018-02-08T12:29:30.000Z</published>
    <updated>2018-02-27T07:51:22.583Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文理学部李达塑像"><a href="#文理学部李达塑像" class="headerlink" title="文理学部李达塑像"></a>文理学部李达塑像</h2><ul><li>樟树</li><li>蝴蝶花：4月，鸢尾科</li><li>鸢尾</li><li>吉祥草：百合科，秋花</li><li>南天竹：小檗科</li><li>锦绣杜鹃：杜鹃科</li><li>麦冬：百合科，6月开花</li><li>池衫</li><li>羊蹄：蓼科，酸模属</li><li>车前</li><li>蛇莓：蔷薇科，果不能吃</li><li>扬子毛茛</li><li>何首乌：蓼科</li><li>鸡矢藤：蓼科</li><li>海仙花</li><li>紫丁香</li><li>厚萼凌霄：位于亭子，6月开花</li><li>紫荆：苏木亚科，早春</li></ul><a id="more"></a><h2 id="工学部世纪广场"><a href="#工学部世纪广场" class="headerlink" title="工学部世纪广场"></a>工学部世纪广场</h2><ul><li>二球悬铃木</li><li>樟树</li><li>棕榈</li><li>复羽叶栾树</li><li>洋玉兰：常绿乔木，椭圆形革质叶</li><li>玉兰（白玉兰）：落叶乔木，先叶开花</li><li>结香：瑞香科，早春开花，先叶开花，花香久闻头疼</li><li>苏铁（铁树）：裸子植物，苏铁科</li><li>鹅观草：位于世纪广场草丛，下同</li><li>棒头草</li><li>雀麦</li><li>菵草</li><li>看麦娘</li><li>瓶尔小草：蕨类，此类是野生，不属于武大常规品种</li><li>绶草（盘龙参）：兰科，此类是野生，不属于武大常规品种</li></ul><h2 id="医学部广场"><a href="#医学部广场" class="headerlink" title="医学部广场"></a>医学部广场</h2><ul><li>雪松</li><li>桂花（木犀）</li><li>樟树</li><li>池衫</li><li>细叶结缕草：位于广场草地，下同</li><li>狗牙根</li><li>早熟禾：早春开花</li><li>救荒野豌豆：荚果，比下类野豌豆果长</li><li>四籽野豌豆：荚果，</li><li>匍茎通泉草：玄参科，通泉草属，二唇形花</li><li>直立婆婆纳：玄参科</li><li>垂丝海棠：，蔷薇科苹果亚科苹果属，不位于广场，下同</li><li>贴梗海棠：灌木状，木瓜属，结果</li><li>槐树：豆科</li><li>喜树：珙桐科</li></ul><h2 id="信部星湖园"><a href="#信部星湖园" class="headerlink" title="信部星湖园"></a>信部星湖园</h2><ul><li><p>孝顺竹：丛生，禾本科</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180210/2eCJgi70j3.png?imageslim" alt="mark"></p></li><li><p>君迁子（黑枣）：</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180210/hI1lbKdGmI.png?imageslim" alt="mark"></p></li><li><p>旱柳：星湖周围，下同</p></li><li><p>垂柳</p></li><li><p>榔榆：榆科，秋花秋果</p></li><li><p>朴树：榔榆旁边</p></li><li><p>木瓜：蔷薇科，树皮类似迷彩服</p></li><li><p>臭椿：苦木科</p></li><li><p>侧柏：柏科</p></li><li><p>柏木</p></li></ul><h2 id="武大牌坊入口区"><a href="#武大牌坊入口区" class="headerlink" title="武大牌坊入口区"></a>武大牌坊入口区</h2><ul><li>金叶女贞</li><li>大叶黄杨</li><li>樟树</li></ul><h2 id="人文馆"><a href="#人文馆" class="headerlink" title="人文馆"></a>人文馆</h2><ul><li>桂花</li><li>圆柏</li><li>海桐</li><li>含笑</li><li>大叶黄杨</li><li>龙爪槐</li><li>桃花：距离人文馆稍远处，下同</li><li>梅花</li><li>山茶</li><li>紫薇</li></ul><h2 id="情人坡"><a href="#情人坡" class="headerlink" title="情人坡"></a>情人坡</h2><ul><li>池衫</li><li>山茶</li><li>垂丝海棠</li><li>贴梗海棠</li><li>湖北海棠</li><li>木瓜</li></ul><h2 id="茶港教工宿舍区小游园"><a href="#茶港教工宿舍区小游园" class="headerlink" title="茶港教工宿舍区小游园"></a>茶港教工宿舍区小游园</h2><ul><li><p>枇杷</p></li><li><p>桂树</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180210/EKgABe2Gmd.png?imageslim" alt="mark"></p></li></ul><h2 id="西区教工宿舍小游园"><a href="#西区教工宿舍小游园" class="headerlink" title="西区教工宿舍小游园"></a>西区教工宿舍小游园</h2><ul><li>广玉兰</li><li>桂树</li><li>雪松</li><li>棕榈</li><li>小叶女贞</li><li>大叶黄杨</li><li>紫藤</li></ul><h2 id="中心湖区"><a href="#中心湖区" class="headerlink" title="中心湖区"></a>中心湖区</h2><ul><li>秤锤树</li><li>杜仲</li><li>榔榆</li><li>朴树</li><li>小叶栎</li><li>皂荚</li><li>毛竹</li><li>紫叶李</li><li>绣球荚蒾</li><li>红继木</li><li>鸡爪槭</li><li>红枫</li><li>蝴蝶花</li><li>麦冬</li><li>酢浆草</li></ul><h2 id="珞珈山枫园路"><a href="#珞珈山枫园路" class="headerlink" title="珞珈山枫园路"></a>珞珈山枫园路</h2><ul><li>水杉</li><li>枫树</li><li>棕榈</li><li>桂树</li><li>石楠</li><li>柑橘</li><li>鸡爪槭</li><li>紫叶李</li></ul><h2 id="老图书馆"><a href="#老图书馆" class="headerlink" title="老图书馆"></a>老图书馆</h2><h3 id="王世杰塑像"><a href="#王世杰塑像" class="headerlink" title="王世杰塑像"></a>王世杰塑像</h3><ul><li>银杏</li><li>黑松</li><li>刺柏</li><li>黄连木</li><li>石榴</li><li>海桐</li></ul><h3 id="王星拱塑像"><a href="#王星拱塑像" class="headerlink" title="王星拱塑像"></a>王星拱塑像</h3><ul><li>女贞</li><li>棕榈</li><li>海桐</li><li>法国冬青</li></ul><h3 id="西侧入口"><a href="#西侧入口" class="headerlink" title="西侧入口"></a>西侧入口</h3><ul><li>石榴</li><li>南天竹</li><li>桂树</li></ul><ul><li>石榴</li><li>桑树</li><li>落木石楠</li><li>朴树</li></ul><h3 id="东侧入口"><a href="#东侧入口" class="headerlink" title="东侧入口"></a>东侧入口</h3><ul><li>石楠</li><li>英国梧桐</li><li>龙柏</li><li>棕榈</li><li>侧柏</li><li>广玉兰</li></ul><h3 id="大楼前与老斋舍接邻草地"><a href="#大楼前与老斋舍接邻草地" class="headerlink" title="大楼前与老斋舍接邻草地"></a>大楼前与老斋舍接邻草地</h3><ul><li>大叶黄杨</li><li>油茶</li><li>石榴</li><li>侧柏</li><li>棕榈</li><li>柑橘</li><li>黑松</li><li>红檵木</li><li>狗牙根</li></ul><h3 id="老斋舍顶从东到西的种植槽"><a href="#老斋舍顶从东到西的种植槽" class="headerlink" title="老斋舍顶从东到西的种植槽"></a>老斋舍顶从东到西的种植槽</h3><ul><li>龙柏</li><li>椤木石楠</li><li>竹</li><li>木槿</li><li>紫藤</li><li>圆柏</li><li>刺柏</li></ul><h2 id="行政楼"><a href="#行政楼" class="headerlink" title="行政楼"></a>行政楼</h2><h3 id="行政楼内左右两侧的绿化圃"><a href="#行政楼内左右两侧的绿化圃" class="headerlink" title="行政楼内左右两侧的绿化圃"></a>行政楼内左右两侧的绿化圃</h3><ul><li>龙柏</li><li>吉祥草</li></ul><h3 id="行政楼东侧"><a href="#行政楼东侧" class="headerlink" title="行政楼东侧"></a>行政楼东侧</h3><ul><li>对节白蜡</li></ul><h2 id="樱花"><a href="#樱花" class="headerlink" title="樱花"></a>樱花</h2><p>基于<code>《珞珈山原色植物图谱》</code></p><ul><li>240号红花高盆樱：2月底至三月初开花，位于梅园校医院</li><li>241号尾叶樱桃：3-4月开花，位于行政楼旁，即绿樱，橘黄色果</li><li>242号大岛樱：3-4月开花，鲲鹏广场后的花园有几株</li><li>243号东京樱花：4月开花，奥场周围，樱花大道，黑果</li><li>244号垂枝樱花：3月底至四月初开花，晚樱，位于枫园14舍，岔路口通往枫园食堂。枫园三舍南侧路边、樱园南坡绿地（即情人坡）</li><li>245号日本晚樱：4月开花，教五周围，樱花大道和梅操之间情人坡，鲲鹏广场</li></ul><p><img src="https://pic4.zhimg.com/80/292c4dcc4552b69c99aea8298c790f07_hd.jpg" alt=""></p><p><img src="https://pic4.zhimg.com/80/cc4ffe797dd7ee59230304b315ae7b1d_hd.jpg" alt="img"></p><p><img src="https://pic4.zhimg.com/80/fea0820c2ca082386a4f5a92e73e4a2e_hd.jpg" alt="img"></p><ul><li>信部星湖东侧：</li></ul><p><img src="https://pic4.zhimg.com/80/v2-959da0b4f7bd6c6ec9348d713e3113ac_hd.jpg" alt="img"></p><ul><li>山樱花：又称福岛樱或青肤樱，4月初开花，花期15-20天，位于校医院前、教四前、樱园入口路旁、樱园南坡绿地（下沉花园）</li></ul><h2 id="绿线"><a href="#绿线" class="headerlink" title="绿线"></a>绿线</h2><h3 id="学府路"><a href="#学府路" class="headerlink" title="学府路"></a>学府路</h3><ul><li>樟树：行道树</li><li>金叶女贞：位于花坛</li><li>大叶黄杨：位于花坛</li></ul><h3 id="科技路"><a href="#科技路" class="headerlink" title="科技路"></a>科技路</h3><ul><li>广玉兰：生科院到教四楼行道树</li><li>银杏：生科院到教四楼行道树</li><li>大叶黄杨</li><li>英国梧桐：教四到樱园路行道树</li></ul><h2 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h2><h3 id="用途分类"><a href="#用途分类" class="headerlink" title="用途分类"></a>用途分类</h3><h4 id="行道树"><a href="#行道树" class="headerlink" title="行道树"></a>行道树</h4><ul><li>银杏</li><li>雪松</li><li>池衫</li><li>水杉</li><li>三角枫</li><li>枫树</li><li>梅树</li><li>桂树</li><li>女贞</li><li>樟树</li><li>广玉兰</li><li>英国梧桐</li><li>垂柳</li><li>石楠</li><li>樱树</li></ul><h4 id="园景树"><a href="#园景树" class="headerlink" title="园景树"></a>园景树</h4><ul><li>樱树</li><li>圆柏</li><li>龙柏</li><li>重阳木</li><li>拐枣</li><li>榉树</li><li>榔榆</li><li>朴树</li><li>三角枫</li><li>雪松</li><li>杜英</li><li>水杉</li><li>乌桕</li><li>复羽叶栾树</li><li>梧桐</li><li>国槐</li><li>石楠</li><li>白玉兰</li><li>棕榈</li><li>黄连木</li></ul><h4 id="花灌类"><a href="#花灌类" class="headerlink" title="花灌类"></a>花灌类</h4><ul><li>红枫</li><li>紫薇</li><li>卫矛</li><li>紫叶桃</li><li>紫叶李</li><li>海桐</li><li>金丝桃</li><li>八角金盘</li><li>南天竹</li><li>竹叶椒</li><li>杜鹃</li><li>云南黄馨</li><li>月季</li><li>火棘</li><li>枸骨</li></ul><h4 id="绿篱类"><a href="#绿篱类" class="headerlink" title="绿篱类"></a>绿篱类</h4><ul><li>马甲子</li><li>栀子</li><li>十大功劳</li><li>金心黄杨</li><li>雀舌黄杨</li><li>紫叶小檗</li><li>法国冬青</li></ul><h4 id="花坛花境类"><a href="#花坛花境类" class="headerlink" title="花坛花境类"></a>花坛花境类</h4><ul><li>月季</li><li>杜鹃</li><li>葱兰</li><li>一串红</li><li>一串蓝</li><li>火棘</li><li>重瓣棣棠</li><li>石蒜</li><li>大花马齿苋</li><li>夜来香</li><li>柳叶马鞭草</li><li>矮亚菊</li><li>山茶</li><li>夹竹桃</li><li>结香</li><li>木槿</li><li>中华绣线菊</li><li>凤尾鸡冠花</li><li>金盏菊</li><li>雏菊</li><li>金鸡菊</li><li>玉簪</li><li>萱草</li><li>美人蕉</li><li>锦带花</li><li>金钟花</li></ul><h3 id="观赏特性"><a href="#观赏特性" class="headerlink" title="观赏特性"></a>观赏特性</h3><h4 id="观形树"><a href="#观形树" class="headerlink" title="观形树"></a>观形树</h4><ul><li>樟树</li><li>桂花</li><li>银杏</li><li>池衫</li><li>水杉</li><li>马尾松</li><li>雪松</li><li>侧柏</li><li>龙柏</li><li>广玉兰</li><li>英国梧桐</li><li>石楠</li><li>椤木石楠</li><li>红檵木</li><li>垂柳</li><li>朴树</li><li>大叶黄杨</li><li>三角枫</li><li>鸡爪槭</li><li>女贞</li><li>白花泡棢</li><li>榔榆</li><li>日本冷杉</li><li>黑松</li><li>金钱松</li><li>杉木</li><li>日本柳杉</li><li>落羽杉</li><li>日本花柏</li><li>罗汉松</li><li>鹅掌楸</li><li>粗榧</li><li>润楠</li><li>合欢</li><li>黄杨</li><li>雀舌黄杨</li><li>交让木</li><li>旱柳</li><li>胡桃</li><li>化香</li><li>卫矛</li><li>珊瑚朴</li><li>榆树</li><li>榉树</li><li>乌桕</li><li>重阳木</li><li>南酸枣</li><li>黄连木</li><li>盐肤木</li><li>中华槭</li><li>金钟花</li><li>白蜡树</li><li>十大功劳</li><li>紫薇</li><li>毛泡桐</li><li>七叶树</li></ul><h4 id="观花树"><a href="#观花树" class="headerlink" title="观花树"></a>观花树</h4><h5 id="春"><a href="#春" class="headerlink" title="春"></a>春</h5><ul><li>含笑</li><li>白玉兰</li><li>桃</li><li>湖北海棠</li><li>李</li><li>梅</li><li>樱</li><li>麻叶绣线菊</li><li>中华绣线菊</li><li>重瓣棣棠</li><li>紫荆</li><li>瑞香</li><li>连翘</li><li>金钟花</li><li>探春花</li><li>云南黄馨</li><li>毛泡桐</li><li>白花泡桐</li></ul><h5 id="夏"><a href="#夏" class="headerlink" title="夏"></a>夏</h5><ul><li>广玉兰</li><li>金樱子</li><li>小果蔷薇</li><li>山合欢</li><li>合欢</li><li>绣球</li><li>山茱萸</li><li>荚蒾</li><li>红檵木</li><li>栾树</li><li>栀子</li><li>金丝桃</li><li>六月雪</li></ul><h5 id="春夏"><a href="#春夏" class="headerlink" title="春夏"></a>春夏</h5><ul><li>紫藤</li><li>锦鸡儿</li><li>忍冬</li><li>锦带花</li><li>芜花</li><li>石楠</li></ul><h5 id="夏秋"><a href="#夏秋" class="headerlink" title="夏秋"></a>夏秋</h5><ul><li>白兰</li><li>糯米条</li><li>六道木</li><li>木槿</li><li>木芙蓉</li><li>多花勾儿茶</li><li>夹竹桃</li><li>牡荆</li><li>石榴</li><li>锦葵</li></ul><h5 id="秋"><a href="#秋" class="headerlink" title="秋"></a>秋</h5><ul><li>决明</li></ul><h5 id="冬春"><a href="#冬春" class="headerlink" title="冬春"></a>冬春</h5><ul><li>腊梅</li><li>油茶</li></ul><h5 id="四季"><a href="#四季" class="headerlink" title="四季"></a>四季</h5><ul><li>月季</li><li>杜鹃</li><li>桂花</li></ul><h4 id="观叶树木"><a href="#观叶树木" class="headerlink" title="观叶树木"></a>观叶树木</h4><h5 id="春-1"><a href="#春-1" class="headerlink" title="春"></a>春</h5><ul><li>山麻秆</li><li>石楠</li></ul><h5 id="秋-1"><a href="#秋-1" class="headerlink" title="秋"></a>秋</h5><ul><li>金钱松</li><li>落羽杉</li><li>水杉</li><li>池衫</li><li>银杏</li><li>鹅掌楸</li><li>榔榆</li><li>朴树</li><li>榆树</li><li>榉树</li><li>美国地锦</li><li>三角枫</li><li>鸡爪槭</li><li>中华槭</li><li>英国梧桐</li><li>重阳木</li><li>七叶树</li></ul><h5 id="四季-1"><a href="#四季-1" class="headerlink" title="四季"></a>四季</h5><ul><li>紫叶桃</li><li>紫叶李</li></ul><h5 id="特殊叶形"><a href="#特殊叶形" class="headerlink" title="特殊叶形"></a>特殊叶形</h5><ul><li>紫荆</li><li>八角枫</li><li>八角金盘</li><li>黄杨</li><li>雀舌黄杨</li><li>锦熟黄杨</li><li>旱柳</li><li>垂柳</li><li>海桐</li><li>爬山虎</li><li>美国地锦</li><li>大叶黄杨</li><li>夹竹桃</li><li>苏铁</li></ul><h2 id="杂集"><a href="#杂集" class="headerlink" title="杂集"></a>杂集</h2><ul><li>秤锤树：位于未名湖畔东南角</li><li>大叶黄杨：位于梅园花坛</li><li>鹅掌楸：花期4-5月，枫园五舍、工学部网球场、珞珈广场</li><li>含笑：花期4-6月，位于标本馆前、校医院前花坛</li><li>红花酢浆草：校园花坛广布</li><li>红花石蒜：位于樱花大道至标本馆一带</li><li>海桐：花期4-5月，人文馆周边</li><li>合欢：珞珈山庄背面山坡、鲲鹏广场</li><li>花木兰：学校行道树</li><li>金丝桃：花期7-8月，梅园花坛</li><li>金银花：又名忍冬，花期4-6月，路旁、山坡灌丛、疏林中</li><li>鸡冠花：花期8-10月，花坛栽培</li><li>郁李：位于樱园</li><li>鸢尾：梅园花坛</li><li>棕榈：茶港教工生活区行道树</li><li>水杉：茶港教工生活区行道树</li><li>马尾松：南三区教工宿舍区</li><li>石榴：南三区教工宿舍区</li><li>女贞：狮子山、行政楼</li><li>枫树：枫园、奥场、珞珈广场</li><li>枫香树：枫园</li><li>桑树：信部、樱顶</li><li>樱花大道旁8棵银杏是20世纪30年代珞珈山建校初期栽植</li><li>罗汉松：育才路</li><li>绿樱：行政楼前</li><li>美人梅：梅园，梅和紫叶李杂交</li><li>阿拉伯婆婆纳：</li><li>柞树：武大附小花坛旁</li><li>南酸枣：武大梅园，名木</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文理学部李达塑像&quot;&gt;&lt;a href=&quot;#文理学部李达塑像&quot; class=&quot;headerlink&quot; title=&quot;文理学部李达塑像&quot;&gt;&lt;/a&gt;文理学部李达塑像&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;樟树&lt;/li&gt;
&lt;li&gt;蝴蝶花：4月，鸢尾科&lt;/li&gt;
&lt;li&gt;鸢尾&lt;/li&gt;
&lt;li&gt;吉祥草：百合科，秋花&lt;/li&gt;
&lt;li&gt;南天竹：小檗科&lt;/li&gt;
&lt;li&gt;锦绣杜鹃：杜鹃科&lt;/li&gt;
&lt;li&gt;麦冬：百合科，6月开花&lt;/li&gt;
&lt;li&gt;池衫&lt;/li&gt;
&lt;li&gt;羊蹄：蓼科，酸模属&lt;/li&gt;
&lt;li&gt;车前&lt;/li&gt;
&lt;li&gt;蛇莓：蔷薇科，果不能吃&lt;/li&gt;
&lt;li&gt;扬子毛茛&lt;/li&gt;
&lt;li&gt;何首乌：蓼科&lt;/li&gt;
&lt;li&gt;鸡矢藤：蓼科&lt;/li&gt;
&lt;li&gt;海仙花&lt;/li&gt;
&lt;li&gt;紫丁香&lt;/li&gt;
&lt;li&gt;厚萼凌霄：位于亭子，6月开花&lt;/li&gt;
&lt;li&gt;紫荆：苏木亚科，早春&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="杂七杂八" scheme="https://tianwenyu.github.io/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    
    
      <category term="杂七杂八" scheme="https://tianwenyu.github.io/tags/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    
  </entry>
  
  <entry>
    <title>【Python Trick】Python的switch-case实现</title>
    <link href="https://tianwenyu.github.io/python-switch/"/>
    <id>https://tianwenyu.github.io/python-switch/</id>
    <published>2018-02-07T12:29:30.000Z</published>
    <updated>2018-02-07T02:58:20.811Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在Python中，并没有实现<code>switch-case</code>语句，通过<code>if-elif</code>实现会显得麻烦，因此通过以下方式实现该语句功能。</p><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h2><h3 id="通过字典实现"><a href="#通过字典实现" class="headerlink" title="通过字典实现"></a>通过字典实现</h3><p>以如下情景为例，将百分制分数转换为五分制分数。如<code>100%</code>转换为<code>5</code>，<code>80%</code>转换为<code>4</code>等。</p><a id="more"></a><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(score)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">'100%'</span>:<span class="number">5</span>,</span><br><span class="line">            <span class="string">'80%'</span>:<span class="number">4</span>,</span><br><span class="line">            <span class="string">'60%'</span>:<span class="number">3</span>,</span><br><span class="line">            <span class="string">'40%'</span>:<span class="number">2</span>,</span><br><span class="line">            <span class="string">'20%'</span>:<span class="number">1</span>,</span><br><span class="line">            <span class="string">'0%'</span>:<span class="number">0</span></span><br><span class="line">        &#125;.get(score)</span><br><span class="line"></span><br><span class="line">print(foo(<span class="string">'100%'</span>)) <span class="comment">#输出5</span></span><br><span class="line">print(foo(<span class="string">'80%'</span>)) <span class="comment">#输出4</span></span><br></pre></td></tr></table></figure><h3 id="通过匿名函数实现"><a href="#通过匿名函数实现" class="headerlink" title="通过匿名函数实现"></a>通过匿名函数实现</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(score,x)</span>:</span></span><br><span class="line"><span class="keyword">return</span>&#123;</span><br><span class="line"><span class="string">'100%'</span>:<span class="keyword">lambda</span> x:x+<span class="number">5</span>,</span><br><span class="line"><span class="string">'80%'</span>:<span class="keyword">lambda</span> x:x+<span class="number">4</span>,</span><br><span class="line"><span class="string">'60%'</span>:<span class="keyword">lambda</span> x:x+<span class="number">3</span>,</span><br><span class="line"><span class="string">'40%'</span>:<span class="keyword">lambda</span> x:x+<span class="number">2</span>,</span><br><span class="line"><span class="string">'20%'</span>:<span class="keyword">lambda</span> x:x+<span class="number">1</span>,</span><br><span class="line"><span class="string">'0%'</span>:<span class="keyword">lambda</span> x:x+<span class="number">0</span>,</span><br><span class="line">&#125;[score](x)</span><br><span class="line"></span><br><span class="line">print(foo(<span class="string">'100%'</span>,<span class="number">0</span>)) <span class="comment">#输出5</span></span><br><span class="line">print(foo(<span class="string">'80%'</span>,<span class="number">0</span>)) <span class="comment">#输出4</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在Python中，并没有实现&lt;code&gt;switch-case&lt;/code&gt;语句，通过&lt;code&gt;if-elif&lt;/code&gt;实现会显得麻烦，因此通过以下方式实现该语句功能。&lt;/p&gt;
&lt;h2 id=&quot;实现方式&quot;&gt;&lt;a href=&quot;#实现方式&quot; class=&quot;headerlink&quot; title=&quot;实现方式&quot;&gt;&lt;/a&gt;实现方式&lt;/h2&gt;&lt;h3 id=&quot;通过字典实现&quot;&gt;&lt;a href=&quot;#通过字典实现&quot; class=&quot;headerlink&quot; title=&quot;通过字典实现&quot;&gt;&lt;/a&gt;通过字典实现&lt;/h3&gt;&lt;p&gt;以如下情景为例，将百分制分数转换为五分制分数。如&lt;code&gt;100%&lt;/code&gt;转换为&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;80%&lt;/code&gt;转换为&lt;code&gt;4&lt;/code&gt;等。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://tianwenyu.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://tianwenyu.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Windows下pip更换源地址</title>
    <link href="https://tianwenyu.github.io/windows-pip/"/>
    <id>https://tianwenyu.github.io/windows-pip/</id>
    <published>2018-02-07T12:29:30.000Z</published>
    <updated>2018-02-07T06:05:32.953Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>打开<code>cmd</code>，输入</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> %APPDATA%</span><br></pre></td></tr></table></figure><p>进入到显示的路径中</p></li><li><p>进入该路径，新建<code>pip</code>文件夹，然后在该文件夹下新建<code>pip.ini</code></p></li><li><p>编辑<code>pip.ini</code>，输入以下内容，即把源地址改为阿里云地址。</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">timeout</span> = <span class="number">6000</span></span><br><span class="line"><span class="attr">index-url</span> = http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"><span class="section">[install]</span></span><br><span class="line"><span class="attr">trusted-host</span>=mirrors.aliyun.com</span><br></pre></td></tr></table></figure><p>​</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开&lt;code&gt;cmd&lt;/code&gt;，输入&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_
      
    
    </summary>
    
      <category term="Python" scheme="https://tianwenyu.github.io/categories/Python/"/>
    
    
      <category term="Windows" scheme="https://tianwenyu.github.io/tags/Windows/"/>
    
      <category term="pip" scheme="https://tianwenyu.github.io/tags/pip/"/>
    
  </entry>
  
  <entry>
    <title>Seaborn库的使用</title>
    <link href="https://tianwenyu.github.io/seaborn/"/>
    <id>https://tianwenyu.github.io/seaborn/</id>
    <published>2018-02-07T02:29:30.000Z</published>
    <updated>2018-02-27T07:31:11.975Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CountPlot"><a href="#CountPlot" class="headerlink" title="CountPlot"></a>CountPlot</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line">train_data=pd.read_csv(<span class="string">'./data/train.csv'</span>)</span><br><span class="line">sns.countplot(x=<span class="string">'Score'</span>,data=train_data)</span><br></pre></td></tr></table></figure><a id="more"></a><p><code>sns.countplot(x=&#39;Score&#39;,data=train_data)</code></p><p>【注】</p><p>属性<code>x</code>为x轴名称，值必须为数据集中的列名。属性<code>x</code>或<code>y</code>中任一一组没有值，则默认<code>count</code></p><p>属性<code>data</code>为数据集，值可以为<code>pandas</code>的<code>dataframe</code>类型。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;CountPlot&quot;&gt;&lt;a href=&quot;#CountPlot&quot; class=&quot;headerlink&quot; title=&quot;CountPlot&quot;&gt;&lt;/a&gt;CountPlot&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;%matplotlib inline&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; pd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; seaborn &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; sns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;train_data=pd.read_csv(&lt;span class=&quot;string&quot;&gt;&#39;./data/train.csv&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sns.countplot(x=&lt;span class=&quot;string&quot;&gt;&#39;Score&#39;&lt;/span&gt;,data=train_data)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://tianwenyu.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Seaborn" scheme="https://tianwenyu.github.io/tags/Seaborn/"/>
    
  </entry>
  
  <entry>
    <title>【汽车口碑分析】3.爬取汽车评论数据</title>
    <link href="https://tianwenyu.github.io/automobile-analysis-3/"/>
    <id>https://tianwenyu.github.io/automobile-analysis-3/</id>
    <published>2018-02-03T12:29:30.000Z</published>
    <updated>2018-02-07T02:22:56.816Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ul><li>Ubuntu 16.04</li><li>Python 3.5</li></ul><h2 id="技术框架"><a href="#技术框架" class="headerlink" title="技术框架"></a>技术框架</h2><ul><li>Scrapy</li></ul><h2 id="需求目标"><a href="#需求目标" class="headerlink" title="需求目标"></a>需求目标</h2><p>本项目为汽车口碑分析，第一步需要爬取对于不同车型的评论数据。</p><p>选择<a href="http://www.58che.com/brand.html" target="_blank" rel="external">58车</a>的车型分类爬取评论数据。</p><a id="more"></a><h2 id="爬取流程"><a href="#爬取流程" class="headerlink" title="爬取流程"></a>爬取流程</h2><ol><li><p>先获取每个车型的链接，以下图中红框内的车型为例</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180206/jB04IJjkLk.png?imageslim" alt="mark"></p></li><li><p>打开链接后，抓取下图红框中的总评分，写入文件中。</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180206/5j7LE7l1EB.png?imageslim" alt="mark"></p></li><li><p>写入总评分后，通过拼接链接进入该车型的用户评论页面。</p><p>通过第一步中获取的链接拼接上<code>list_s1_p1.html</code>，组成用户评论页面的链接。</p><p>【注】此为第一页的链接，若还有下一页，下述步骤会提及处理方法。</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180206/9KaKELGGj7.png?imageslim" alt="mark"></p></li><li><p>抓取评论页面中的各种数据，如<code>id</code>，<code>评分</code>，<code>评论</code>等。</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180206/24mD9Kk40g.png?imageslim" alt="mark"></p></li><li><p>若该评论页面还有<code>下一页</code>，则继续抓取下一页中的评论数据。</p><p>【方法】</p><p>判断页面中是否有<code>下一页</code>元素，若有则回调解析评论页面的方法。</p></li><li><p>将爬取的数据保存到文件中。</p></li></ol><h2 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h2><h3 id="创建新工程"><a href="#创建新工程" class="headerlink" title="创建新工程"></a>创建新工程</h3><p>先创建工程目录</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/t/dataset/</span><br><span class="line">mkdir carSpider</span><br></pre></td></tr></table></figure><p>创建新工程</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scrapy startproject carSpider</span><br></pre></td></tr></table></figure><h3 id="编辑items-py文件"><a href="#编辑items-py文件" class="headerlink" title="编辑items.py文件"></a>编辑<code>items.py</code>文件</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define here the models for your scraped items</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># See documentation in:</span></span><br><span class="line"><span class="comment"># http://doc.scrapy.org/en/latest/topics/items.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CarspiderItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    file=scrapy.Field() <span class="comment">#文件名</span></span><br><span class="line">    car=scrapy.Field() <span class="comment">#车型</span></span><br><span class="line">    score=scrapy.Field() <span class="comment">#总评分</span></span><br><span class="line">    u_id=scrapy.Field() <span class="comment">#用户ID</span></span><br><span class="line">    u_score=scrapy.Field() <span class="comment">#用户评分</span></span><br><span class="line">    u_merit=scrapy.Field() <span class="comment">#用户评论优点</span></span><br><span class="line">    u_demerit=scrapy.Field() <span class="comment">#用户评论缺点</span></span><br><span class="line">    u_summary=scrapy.Field() <span class="comment">#用户评论综述</span></span><br><span class="line">    u_flower=scrapy.Field() <span class="comment">#用户评论鲜花数</span></span><br><span class="line">    u_brick=scrapy.Field() <span class="comment">#用户评论板砖数</span></span><br></pre></td></tr></table></figure><h3 id="编写carSpider-py文件"><a href="#编写carSpider-py文件" class="headerlink" title="编写carSpider.py文件"></a>编写<code>carSpider.py</code>文件</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> carSpider.items <span class="keyword">import</span> CarspiderItem</span><br><span class="line"></span><br><span class="line">baseDir = <span class="string">'/home/t/dataset/carRemark/'</span></span><br><span class="line">startUrl=<span class="string">'http://www.58che.com/brand.html'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CarSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line"></span><br><span class="line">    name=<span class="string">'spider'</span> <span class="comment">#爬虫名</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.start_urls=[startUrl] </span><br><span class="line"></span><br><span class="line">    <span class="comment">#第一层解析方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self,response)</span>:</span></span><br><span class="line"><span class="comment">#定位到车型元素</span></span><br><span class="line">        subclasses=response.css(<span class="string">'body &gt; div.fltop &gt; div.marcenter &gt; div &gt; div &gt; div.r &gt; ul &gt; li &gt; dl &gt; dt &gt; a'</span>)</span><br><span class="line">        <span class="keyword">for</span> subclass <span class="keyword">in</span> subclasses:</span><br><span class="line">            subclass_name=subclass.xpath(<span class="string">'text()'</span>).extract_first() <span class="comment">#获取车型名称文本</span></span><br><span class="line">            subclass_link=subclass.xpath(<span class="string">'@href'</span>).extract_first() <span class="comment">#获取车型链接</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=subclass_link,callback=self.parse_car_subclass,meta=&#123;<span class="string">'file'</span>:subclass_name&#125;) <span class="comment">#回调下一层解析方法，并把车型名称传递给该方法作为文件名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第二层解析方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_car_subclass</span><span class="params">(self,response)</span>:</span></span><br><span class="line">        infos=response.css(<span class="string">'#line1 &gt; div.cars_line2.l &gt; div.dianpings &gt; div.d_div1.clearfix &gt; font'</span>) <span class="comment">#定位到总评分元素</span></span><br><span class="line">        <span class="keyword">for</span> info <span class="keyword">in</span> infos:</span><br><span class="line">            score=info.xpath(<span class="string">'text()'</span>).extract_first() <span class="comment">#获取总评分元素文本</span></span><br><span class="line">            file=response.meta[<span class="string">'file'</span>] <span class="comment">#获取上个Request传递来的meta['file']</span></span><br><span class="line">            self.writeScore(file,score) <span class="comment">#将总评分写入文件中</span></span><br><span class="line">            link=response.url+<span class="string">'list_s1_p1.html'</span> <span class="comment">#拼接用户评论第一页链接</span></span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=link,callback=self.parse_remark,meta=&#123;<span class="string">'file'</span>:file&#125;) <span class="comment">#回调下一层解析方法，把车型名称传递给该方法作为文件名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第三层解析方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_remark</span><span class="params">(self,response)</span>:</span></span><br><span class="line">        <span class="comment">#定位到用户评论元素</span></span><br><span class="line">        infos=response.css(<span class="string">'body &gt; div.newbox &gt; div &gt; div.xgo_cars_w760.l &gt; div.xgo_dianping_infos.mb10 &gt; div.xgo_cars_dianping &gt; div &gt; dl'</span>)</span><br><span class="line">        <span class="keyword">for</span> info <span class="keyword">in</span> infos:</span><br><span class="line">            uid=info.xpath(<span class="string">'dd[1]/strong/a/text()'</span>)[<span class="number">0</span>].extract() <span class="comment">#获取用户ID</span></span><br><span class="line">            score=info.xpath(<span class="string">'dd[1]/div/div/@style'</span>)[<span class="number">0</span>].extract() <span class="comment">#获取用户评分星级</span></span><br><span class="line">            score=self.getScore(score) <span class="comment">#将用户评分星级转化为5分制评分</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="comment">#先获取是否有‘优点’元素，若有则定位‘优点’元素的下一个兄弟节点，即‘优点评语’，若无则为空</span></span><br><span class="line">                node=info.xpath(<span class="string">'dd[2]/div/div[contains(@class,"l redc00")]'</span>)[<span class="number">0</span>] </span><br><span class="line">                <span class="keyword">if</span> node <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                    merit=node.xpath(<span class="string">'following-sibling::*[1]/text()'</span>)[<span class="number">0</span>].extract()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    merit=<span class="string">''</span></span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                merit=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="comment">#先获取是否有‘缺点’元素，若有则定位‘缺点’元素的下一个兄弟节点，即‘缺点评语’，若无则为空</span></span><br><span class="line">                node=info.xpath(<span class="string">'dd[2]/div/div[contains(@class,"l hei666")]'</span>)[<span class="number">0</span>]</span><br><span class="line">                <span class="keyword">if</span> node <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                    demerit=node.xpath(<span class="string">'following-sibling::*[1]/text()'</span>)[<span class="number">0</span>].extract()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    demerit=<span class="string">''</span></span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                demerit=<span class="string">''</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="comment">#先获取是否有‘综述’元素，若有则定位‘综述’元素的下一个兄弟节点，即‘综述评语’，若无则为空</span></span><br><span class="line">                node=info.xpath(<span class="string">'dd[2]/div/div[contains(@class,"l")]'</span>)[<span class="number">0</span>]</span><br><span class="line">                <span class="keyword">if</span> node <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                    summary=node.xpath(<span class="string">'following-sibling::*[1]/text()'</span>)[<span class="number">0</span>].extract()</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    summary=<span class="string">''</span></span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                summary=<span class="string">''</span></span><br><span class="line"></span><br><span class="line">            flower=info.xpath(<span class="string">'dd[2]/div[contains(@class,"apply")]/a[3]/span/text()'</span>)[<span class="number">0</span>].extract() <span class="comment">#获取鲜花数</span></span><br><span class="line">            brick=info.xpath(<span class="string">'dd[2]/div[contains(@class,"apply")]/a[4]/span/text()'</span>)[<span class="number">0</span>].extract() <span class="comment">#获取板砖数</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">#创建Item</span></span><br><span class="line">            item=CarspiderItem()</span><br><span class="line">            item[<span class="string">'file'</span>]=response.meta[<span class="string">'file'</span>]</span><br><span class="line">            item[<span class="string">'u_id'</span>]=uid</span><br><span class="line">            item[<span class="string">'u_score'</span>]=score</span><br><span class="line">            item[<span class="string">'u_merit'</span>]=merit</span><br><span class="line">            item[<span class="string">'u_demerit'</span>]=demerit</span><br><span class="line">            item[<span class="string">'u_summary'</span>]=summary</span><br><span class="line">            item[<span class="string">'u_flower'</span>]=flower</span><br><span class="line">            item[<span class="string">'u_brick'</span>]=brick</span><br><span class="line"></span><br><span class="line">            <span class="comment">#生成Item</span></span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line">            </span><br><span class="line">        <span class="comment">#获取`下一页`元素，若有则回调`parse_remark`第三层解析方法，即继续获取下一页用户评论数据</span></span><br><span class="line">        <span class="comment">#定位`下一页`元素</span></span><br><span class="line">        next_pages=response.css(<span class="string">'body &gt; div.newbox &gt; div &gt; div.xgo_cars_w760.l &gt; div.xgo_dianping_infos.mb10 &gt; div.xgo_cars_dianping &gt; div &gt; div &gt; a.next'</span>)</span><br><span class="line">        <span class="keyword">for</span> next_page <span class="keyword">in</span> next_pages:</span><br><span class="line">            <span class="comment">#若有`下一页`元素，则拼接`下一页`元素链接，并回调第三层解析方法，用来获取下一页用户评论数据</span></span><br><span class="line">            <span class="keyword">if</span> next_page <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                next_page_link=next_page.xpath(<span class="string">'@href'</span>)[<span class="number">0</span>].extract()</span><br><span class="line">                next_page_link=<span class="string">'http://www.58che.com'</span>+next_page_link</span><br><span class="line">                file=response.meta[<span class="string">'file'</span>]</span><br><span class="line">                <span class="keyword">yield</span> scrapy.Request(url=next_page_link, callback=self.parse_remark, meta=&#123;<span class="string">'file'</span>: file&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#将总评分写入文件</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">writeScore</span><span class="params">(self,file,score)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'/home/t/dataset/carRemark/'</span>+file+<span class="string">'.json'</span>,<span class="string">'a+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(score+<span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#将用户评分星级转为5分制分数，类似switch功能</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getScore</span><span class="params">(self,text)</span>:</span></span><br><span class="line">        text=text.split(<span class="string">':'</span>)[<span class="number">1</span>] <span class="comment">#分割文本，原文本格式形如`width:100%`，分割并截取`:`后的文本</span></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">'100%'</span>:<span class="number">5</span>,</span><br><span class="line">            <span class="string">'80%'</span>:<span class="number">4</span>,</span><br><span class="line">            <span class="string">'60%'</span>:<span class="number">3</span>,</span><br><span class="line">            <span class="string">'40%'</span>:<span class="number">2</span>,</span><br><span class="line">            <span class="string">'20%'</span>:<span class="number">1</span>,</span><br><span class="line">            <span class="string">'0%'</span>:<span class="number">0</span></span><br><span class="line">        &#125;.get(text)</span><br></pre></td></tr></table></figure><p>【解析】</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定位到用户评论元素</span></span><br><span class="line">   infos=response.css(<span class="string">'body &gt; div.newbox &gt; div &gt; div.xgo_cars_w760.l &gt; div.xgo_dianping_infos.mb10 &gt; div.xgo_cars_dianping &gt; div &gt; dl'</span>)</span><br></pre></td></tr></table></figure><p>此句代码定位的元素如下图所示，定位到的是评论页面每条评论的元素整体。</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180206/GDkBDcE9A8.png?imageslim" alt="mark"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> info <span class="keyword">in</span> infos:</span><br><span class="line">           uid=info.xpath(<span class="string">'dd[1]/strong/a/text()'</span>)[<span class="number">0</span>].extract() <span class="comment">#获取用户ID</span></span><br><span class="line">           score=info.xpath(<span class="string">'dd[1]/div/div/@style'</span>)[<span class="number">0</span>].extract() <span class="comment">#获取用户评分星级</span></span><br><span class="line">           score=self.getScore(score) <span class="comment">#将用户评分星级转化为5分制评分</span></span><br></pre></td></tr></table></figure><p><code>uid</code>定位到的元素如下图所示，</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180206/3jJH33i5lI.png?imageslim" alt="mark"></p><p><code>score</code>定位到的元素如下图所示，获取<code>score</code>元素的<code>style</code>属性，值形如<code>width:80%</code>，需要通过<code>getScore()</code>方法转换为五分制分数。</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180206/1IG8ef6j92.png?imageslim" alt="mark"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="comment">#先获取是否有‘优点’元素，若有则定位‘优点’元素的下一个兄弟节点，即‘优点评语’，若无则为空</span></span><br><span class="line">node=info.xpath(<span class="string">'dd[2]/div/div[contains(@class,"l redc00")]'</span>)[<span class="number">0</span>] </span><br><span class="line"><span class="keyword">if</span> node <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">merit=node.xpath(<span class="string">'following-sibling::*[1]/text()'</span>)[<span class="number">0</span>].extract()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">merit=<span class="string">''</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">merit=<span class="string">''</span></span><br></pre></td></tr></table></figure><p>先定位是否有<code>优点</code>元素，如下图红框所示，若有该元素，则获取<code>优点</code>元素的下一个兄弟节点内容，如下图蓝框所示，若无则为空。</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180206/6Bl97dCa4D.png?imageslim" alt="mark"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获取`下一页`元素，若有则回调`parse_remark`第三层解析方法，即继续获取下一页用户评论数据</span></span><br><span class="line"><span class="comment">#定位`下一页`元素</span></span><br><span class="line">next_pages=response.css(<span class="string">'body &gt; div.newbox &gt; div &gt; div.xgo_cars_w760.l &gt; div.xgo_dianping_infos.mb10 &gt; div.xgo_cars_dianping &gt; div &gt; div &gt; a.next'</span>)</span><br><span class="line"><span class="keyword">for</span> next_page <span class="keyword">in</span> next_pages:</span><br><span class="line"><span class="comment">#若有`下一页`元素，则拼接`下一页`元素链接，并回调第三层解析方法，用来获取下一页用户评论数据</span></span><br><span class="line"><span class="keyword">if</span> next_page <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">next_page_link=next_page.xpath(<span class="string">'@href'</span>)[<span class="number">0</span>].extract()</span><br><span class="line">             next_page_link=<span class="string">'http://www.58che.com'</span>+next_page_link</span><br><span class="line">             file=response.meta[<span class="string">'file'</span>]</span><br><span class="line">             <span class="keyword">yield</span> scrapy.Request(url=next_page_link, callback=self.parse_remark, meta=&#123;<span class="string">'file'</span>: file&#125;)</span><br></pre></td></tr></table></figure><p>解析完上述内容，判断用户评论页面是否有分页，定位是否有<code>下一页</code>元素，如下图红框所示，若有则获取该元素链接，如下图橙框所示。</p><p>获取之后，回调<code>parse_remark</code>方法解析下一页的评论页面。</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180207/3bDiLjmH2b.png?imageslim" alt="mark"></p><h2 id="编辑pipelines-py文件"><a href="#编辑pipelines-py文件" class="headerlink" title="编辑pipelines.py文件"></a>编辑<code>pipelines.py</code>文件</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your item pipelines here</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span></span><br><span class="line"><span class="comment"># See: http://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line">baseDir = <span class="string">'/home/t/dataset/carRemark/'</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CarspiderPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        print(item[<span class="string">'file'</span>])</span><br><span class="line">        <span class="keyword">with</span> codecs.open(baseDir+item[<span class="string">'file'</span>]+<span class="string">'.json'</span>,<span class="string">'a+'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            line=json.dumps(dict(item),ensure_ascii=<span class="keyword">False</span>)+<span class="string">'\n'</span></span><br><span class="line">            f.write(line)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure><h2 id="编辑settings-py文件"><a href="#编辑settings-py文件" class="headerlink" title="编辑settings.py文件"></a>编辑<code>settings.py</code>文件</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Scrapy settings for carSpider project</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For simplicity, this file contains only settings considered important or</span></span><br><span class="line"><span class="comment"># commonly used. You can find more settings consulting the documentation:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://doc.scrapy.org/en/latest/topics/settings.html</span></span><br><span class="line"><span class="comment">#     http://scrapy.readthedocs.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#     http://scrapy.readthedocs.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"></span><br><span class="line">BOT_NAME = <span class="string">'carSpider'</span></span><br><span class="line"></span><br><span class="line">SPIDER_MODULES = [<span class="string">'carSpider.spiders'</span>]</span><br><span class="line">NEWSPIDER_MODULE = <span class="string">'carSpider.spiders'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></span><br><span class="line"><span class="comment">#USER_AGENT = 'carSpider (+http://www.yourdomain.com)'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Obey robots.txt rules</span></span><br><span class="line">ROBOTSTXT_OBEY = <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS = 32</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure a delay for requests for the same website (default: 0)</span></span><br><span class="line"><span class="comment"># See http://scrapy.readthedocs.org/en/latest/topics/settings.html#download-delay</span></span><br><span class="line"><span class="comment"># See also autothrottle settings and docs</span></span><br><span class="line"><span class="comment">#DOWNLOAD_DELAY = 3</span></span><br><span class="line"><span class="comment"># The download delay setting will honor only one of:</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></span><br><span class="line"><span class="comment">#CONCURRENT_REQUESTS_PER_IP = 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable cookies (enabled by default)</span></span><br><span class="line"><span class="comment">#COOKIES_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></span><br><span class="line"><span class="comment">#TELNETCONSOLE_ENABLED = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Override the default request headers:</span></span><br><span class="line"><span class="comment">#DEFAULT_REQUEST_HEADERS = &#123;</span></span><br><span class="line"><span class="comment">#   'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',</span></span><br><span class="line"><span class="comment">#   'Accept-Language': 'en',</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable spider middlewares</span></span><br><span class="line"><span class="comment"># See http://scrapy.readthedocs.org/en/latest/topics/spider-middleware.html</span></span><br><span class="line"><span class="comment">#SPIDER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    'carSpider.middlewares.CarspiderSpiderMiddleware': 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable downloader middlewares</span></span><br><span class="line"><span class="comment"># See http://scrapy.readthedocs.org/en/latest/topics/downloader-middleware.html</span></span><br><span class="line"><span class="comment">#DOWNLOADER_MIDDLEWARES = &#123;</span></span><br><span class="line"><span class="comment">#    'carSpider.middlewares.MyCustomDownloaderMiddleware': 543,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable or disable extensions</span></span><br><span class="line"><span class="comment"># See http://scrapy.readthedocs.org/en/latest/topics/extensions.html</span></span><br><span class="line"><span class="comment">#EXTENSIONS = &#123;</span></span><br><span class="line"><span class="comment">#    'scrapy.extensions.telnet.TelnetConsole': None,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure item pipelines</span></span><br><span class="line"><span class="comment"># See http://scrapy.readthedocs.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">    <span class="string">'carSpider.pipelines.CarspiderPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></span><br><span class="line"><span class="comment"># See http://doc.scrapy.org/en/latest/topics/autothrottle.html</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></span><br><span class="line"><span class="comment"># The initial download delay</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></span><br><span class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></span><br><span class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></span><br><span class="line"><span class="comment"># each remote server</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></span><br><span class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></span><br><span class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></span><br><span class="line"><span class="comment"># See http://scrapy.readthedocs.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></span><br><span class="line">HTTPCACHE_ENABLED = <span class="keyword">False</span></span><br><span class="line"><span class="comment">#HTTPCACHE_EXPIRATION_SECS = 0</span></span><br><span class="line"><span class="comment">#HTTPCACHE_DIR = 'httpcache'</span></span><br><span class="line"><span class="comment">#HTTPCACHE_IGNORE_HTTP_CODES = []</span></span><br><span class="line"><span class="comment">#HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage'</span></span><br></pre></td></tr></table></figure><p>【解析】</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ROBOTSTXT_OBEY = <span class="keyword">False</span></span><br></pre></td></tr></table></figure><p>将原来的<code>True</code>改为<code>False</code>。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">    <span class="string">'carSpider.pipelines.CarspiderPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将原来的注释去掉，即注册pipelines，否则无法使用该pipelines。</p><h2 id="运行爬虫"><a href="#运行爬虫" class="headerlink" title="运行爬虫"></a>运行爬虫</h2><p>在项目根目录下新建文件<code>entrypoint.py</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180207/42KlbG9aFe.png?imageslim" alt="mark"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.cmdline <span class="keyword">import</span> execute</span><br><span class="line">execute([<span class="string">'scrapy'</span>,<span class="string">'crawl'</span>,<span class="string">'spider'</span>])</span><br></pre></td></tr></table></figure><h2 id="项目源码"><a href="#项目源码" class="headerlink" title="项目源码"></a>项目源码</h2><p><a href="https://github.com/tianwenyu/58CheSpider" target="_blank" rel="external">Github地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Ubuntu 16.04&lt;/li&gt;
&lt;li&gt;Python 3.5&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;技术框架&quot;&gt;&lt;a href=&quot;#技术框架&quot; class=&quot;headerlink&quot; title=&quot;技术框架&quot;&gt;&lt;/a&gt;技术框架&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Scrapy&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;需求目标&quot;&gt;&lt;a href=&quot;#需求目标&quot; class=&quot;headerlink&quot; title=&quot;需求目标&quot;&gt;&lt;/a&gt;需求目标&lt;/h2&gt;&lt;p&gt;本项目为汽车口碑分析，第一步需要爬取对于不同车型的评论数据。&lt;/p&gt;
&lt;p&gt;选择&lt;a href=&quot;http://www.58che.com/brand.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;58车&lt;/a&gt;的车型分类爬取评论数据。&lt;/p&gt;
    
    </summary>
    
      <category term="项目" scheme="https://tianwenyu.github.io/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="汽车口碑分析" scheme="https://tianwenyu.github.io/tags/%E6%B1%BD%E8%BD%A6%E5%8F%A3%E7%A2%91%E5%88%86%E6%9E%90/"/>
    
      <category term="scrapy" scheme="https://tianwenyu.github.io/tags/scrapy/"/>
    
  </entry>
  
  <entry>
    <title>【分布式编程】四——Pycharm运行Python版Spark程序</title>
    <link href="https://tianwenyu.github.io/spark-pycharm/"/>
    <id>https://tianwenyu.github.io/spark-pycharm/</id>
    <published>2018-01-13T12:29:30.000Z</published>
    <updated>2018-01-17T15:12:55.632Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>此前搭建成功分布式Spark环境，此文介绍使用Pycharm运行Python语言的Spark程序。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="安装Pycharm"><a href="#安装Pycharm" class="headerlink" title="安装Pycharm"></a>安装Pycharm</h3><ol><li><p><a href="https://download.jetbrains.8686c.com/python/pycharm-professional-2017.3.2.tar.gz" target="_blank" rel="external">点击下载</a>。</p></li><li><p>过程与<a href="https://tianwenyu.github.io/ubuntu-intellij/">安装Intellij IDEA</a>类似，在此不在赘述。</p></li><li><p>进入到安装目录下执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin pycharm-sh</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><h3 id="配置运行环境"><a href="#配置运行环境" class="headerlink" title="配置运行环境"></a>配置运行环境</h3><ol><li><p>创建新项目</p></li><li><p>新建一个Python文件，这里命名为<code>main.py</code></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark <span class="keyword">import</span> SparkContext,SparkConf</span><br><span class="line"></span><br><span class="line">conf=SparkConf().setAppName(<span class="string">"sparkDemo"</span>).setMaster(<span class="string">"local"</span>)</span><br><span class="line">sc=SparkContext(conf=conf)</span><br><span class="line">logFile=<span class="string">'/data/input/README.txt'</span></span><br><span class="line">logData=sc.textFile(logFile).cache()</span><br><span class="line"></span><br><span class="line">numAs = logData.filter(<span class="keyword">lambda</span> s: <span class="string">'a'</span> <span class="keyword">in</span> s).count()</span><br><span class="line">numBs = logData.filter(<span class="keyword">lambda</span> s: <span class="string">'b'</span> <span class="keyword">in</span> s).count()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Lines with a: %i, lines with b: %i"</span> % (numAs, numBs))</span><br></pre></td></tr></table></figure><p><code>logFile=&#39;/data/input/README.txt&#39;</code></p><p>此路径是之前运行Hadoop例程在HDFS中创建的<code>/data/input</code>文件夹以及上传到此文件夹的<code>README.txt</code>文件。</p></li><li><p>将Spark中的pyspark模块添加到Python环境变量中去</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure><p>添加以下代码</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PYTHONPATH=<span class="variable">$SPARK_HOME</span>/libexec/python:<span class="variable">$SPARK_HOME</span>/libexec/python/build:<span class="variable">$PYTHONPATH</span></span><br></pre></td></tr></table></figure></li><li><p>更新配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></li><li><p>将<code>/usr/spark-2.2.1-bin-without-hadoop/Python/lib/py4j-0.10.4-src.zip</code>解压。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf /usr/spark-2.2.1-bin-without-hadoop/Python/lib/py4j-0.10.4-src.zip</span><br></pre></td></tr></table></figure><p>将解压后的文件夹复制到<code>/usr/spark-2.2.1-bin-without-hadoop/Python</code>文件夹下。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mv /usr/spark-2.2.1-bin-without-hadoop/Python/lib/py4j /usr/spark-2.2.1-bin-without-hadoop/Python</span><br></pre></td></tr></table></figure><p>【注】</p><ul><li><code>/usr/spark-2.2.1-bin-without-hadoop</code>是spark安装目录。</li><li><code>py4j-0.10-4-src.zip</code>根据版本号不同，文件名称也有差异</li></ul></li><li><p>点击<code>Run-Edit Configurations</code></p><p>点击左上角绿色<code>+</code>，选择<code>Python</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180116/cHdc249k76.png?imageslim" alt="mark"></p><p>填写配置</p><ul><li><p><code>Name</code>：任起一个名字即可</p></li><li><p><code>Script path</code>：执行的Python文件的路径。可以点右侧的下图中红框选择文件路径。</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180116/JdAk0mAFIf.png?imageslim" alt="mark"></p></li><li><p><code>Environment variables</code>：添加<code>PYTHONPATH</code>和<code>SPARK_HOME</code>变量。</p><p><code>PYTHONPATH</code>：<code>spark安装目录/python</code></p><p><code>SPARK_HOME</code>：<code>spark安装目录</code></p></li></ul></li><li><p>点击<code>File-Settings-Project-Project Structure</code></p><p>点击右侧<code>Add Content Root</code></p><p>添加<code>/usr/spark-2.2.1-bin-without-hadoop/Python/lib/py4j-0.10.4-src.zip</code>和<code>/usr/spark-2.2.1-bin-without-hadoop/Python/lib/pyspark.zip</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180117/f9A9bFieH4.png?imageslim" alt="mark"></p></li><li><p>运行即可</p></li></ol><p>【注】若<code>from pyspark import SparkContext,SparkConf</code>下还有红线，则添加以下代码即可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.insert(<span class="number">1</span>,<span class="string">'/usr/spark-2.2.1-bin-without-hadoop/python'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;此前搭建成功分布式Spark环境，此文介绍使用Pycharm运行Python语言的Spark程序。&lt;/p&gt;
&lt;h2 id=&quot;操作步骤&quot;&gt;&lt;a href=&quot;#操作步骤&quot; class=&quot;headerlink&quot; title=&quot;操作步骤&quot;&gt;&lt;/a&gt;操作步骤&lt;/h2&gt;&lt;h3 id=&quot;安装Pycharm&quot;&gt;&lt;a href=&quot;#安装Pycharm&quot; class=&quot;headerlink&quot; title=&quot;安装Pycharm&quot;&gt;&lt;/a&gt;安装Pycharm&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://download.jetbrains.8686c.com/python/pycharm-professional-2017.3.2.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击下载&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;过程与&lt;a href=&quot;https://tianwenyu.github.io/ubuntu-intellij/&quot;&gt;安装Intellij IDEA&lt;/a&gt;类似，在此不在赘述。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进入到安装目录下执行&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./bin pycharm-sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Spark" scheme="https://tianwenyu.github.io/categories/Spark/"/>
    
    
      <category term="Python" scheme="https://tianwenyu.github.io/tags/Python/"/>
    
      <category term="Spark" scheme="https://tianwenyu.github.io/tags/Spark/"/>
    
  </entry>
  
  <entry>
    <title>【分布式编程】三——基于VirtualBox的Spark完全分布式环境</title>
    <link href="https://tianwenyu.github.io/virtualbox-spark/"/>
    <id>https://tianwenyu.github.io/virtualbox-spark/</id>
    <published>2018-01-13T02:29:30.000Z</published>
    <updated>2018-01-22T13:57:15.554Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Spark的搭建依赖于Hadoop，因此本文基于之前<a href="https://tianwenyu.github.io/virtualbox-haddop/">分布式Hadoop环境</a>，JDK、Hadoop等已安装好，</p><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><ul><li>虚拟机：VirtualBox</li><li>Linux：Ubuntu 16.04 LTS</li><li>HAdoop 2.7.5</li><li>IDE：Intellij IDEA</li><li>JDK 1.8.0_151</li><li>Scala-2.12.4</li><li>Spark-2.2.1</li></ul><a id="more"></a><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="安装Scala"><a href="#安装Scala" class="headerlink" title="安装Scala"></a>安装Scala</h3><ol><li><p>下载<a href="https://downloads.lightbend.com/scala/2.12.4/scala-2.12.4.tgz" target="_blank" rel="external">Scala-2.12.4</a></p></li><li><p>解压到当前目录</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf scala-2.12.4.tgz</span><br></pre></td></tr></table></figure></li><li><p>将解压后的文件夹移动到<code>/usr</code>下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mv scala-2.12.4/ /usr/</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure><p>添加如下代码，路径根据情况自己修改</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> SCALA_HOME=/usr/scala-2.12.4</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$SCALA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></li><li><p>更新环境变量配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></li><li><p>验证是否安装成功</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scala -version</span><br></pre></td></tr></table></figure><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180115/e6k62ke67K.png?imageslim" alt=""></p></li></ol><h3 id="安装Spark"><a href="#安装Spark" class="headerlink" title="安装Spark"></a>安装Spark</h3><ol><li><p>下载<a href="http://spark.apache.org/downloads.html" target="_blank" rel="external">Spark</a>，由于Spark基于Hadoop，且之前已经安装好Hadoop，所以下载没有绑定Hadoop的版本，所以选择<a href="http://mirrors.hust.edu.cn/apache/spark/spark-2.2.1/spark-2.2.1-bin-without-hadoop.tgz" target="_blank" rel="external">spark-2.2.1-bin-without-hadoop.tgz</a></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180115/JBJiB7BK7A.png?imageslim" alt="mark"></p></li><li><p>解压到当前目录</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf spark-2.2.1-bin-without-hadoop.tgz</span><br></pre></td></tr></table></figure></li><li><p>将解压后的文件夹移动到<code>/usr/local/</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mv spark-2.2.1-bin-without-hadoop/ /usr/</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure><p>添加以下代码</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> SPARK_HOME=/usr/spark-2.2.1-bin-without-hadoop</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$SPARK_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$SPARK_HOME</span>/sbin</span><br></pre></td></tr></table></figure></li><li><p>更新环境变量配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></li></ol><h3 id="Spark配置"><a href="#Spark配置" class="headerlink" title="Spark配置"></a>Spark配置</h3><p>【注】此处以<code>master</code>主机为例，其他从机作相应更改</p><h4 id="配置spark-env-sh"><a href="#配置spark-env-sh" class="headerlink" title="配置spark-env.sh"></a>配置<code>spark-env.sh</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/spark-2.2.1-bin-without-hadoop/conf/</span><br><span class="line">sudo cp spark-env.sh.template spark-env.sh</span><br><span class="line">sudo vim spark-env.sh</span><br></pre></td></tr></table></figure><p>添加以下代码</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> SPARK_HOME=/usr/spark-2.2.1-bin-without-hadoop</span><br><span class="line"><span class="built_in">export</span> SPARK_DIST_CLASSPATH=$(/usr/hadoop-2.7.5/bin/hadoop classpath)</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/jdk1.8.0_151</span><br><span class="line"><span class="built_in">export</span> SCALA_HOME=/usr/scala-2.12.4</span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/hadoop-2.7.5</span><br><span class="line"><span class="built_in">export</span> HADOOP_CONF_DIR=/usr/hadoop-2.7.5/etc/hadoop</span><br><span class="line"><span class="built_in">export</span> SPARK_MASTER_IP=master</span><br><span class="line"><span class="built_in">export</span> SPARK_MASTER_HOST=master</span><br><span class="line"><span class="built_in">export</span> SPARK_LOCAL_IP=master</span><br><span class="line"><span class="built_in">export</span> SPARK_WORKER_MEMEORY=1g</span><br><span class="line"><span class="built_in">export</span> SPARK_EXECUTOR_MEMEORY=1g</span><br><span class="line"><span class="built_in">export</span> SPARK_DRIVER_MEMORY=1g</span><br><span class="line"><span class="built_in">export</span> SPARK_WORKER_CORES=1</span><br></pre></td></tr></table></figure><p>【注】</p><ul><li><code>SPARK_LOCAL_IP</code>为本地地址，从机需要更改为自己的IP</li></ul><h4 id="配置slaves"><a href="#配置slaves" class="headerlink" title="配置slaves"></a>配置<code>slaves</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp slaves.template slaves</span><br><span class="line">sudo vim slaves</span><br></pre></td></tr></table></figure><p>添加所有从机的主机名</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node1</span><br><span class="line">node2</span><br></pre></td></tr></table></figure><h3 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h3><p>因为Spark基于Hadoop，所以需要先启动Hadoop。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">start-all.sh</span><br></pre></td></tr></table></figure><p>再启动Spark，进入到Spark安装目录下的<code>sbin</code>文件夹</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/spark-2.2.1-bin-without-hadoop/sbin</span><br></pre></td></tr></table></figure><p>执行<code>sbin</code>文件夹下的<code>start-all.sh</code>，若直接执行<code>start-all.sh</code>，启动的是Hadoop</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./start-all.sh</span><br></pre></td></tr></table></figure><h3 id="查看集群"><a href="#查看集群" class="headerlink" title="查看集群"></a>查看集群</h3><h4 id="查看进程"><a href="#查看进程" class="headerlink" title="查看进程"></a>查看进程</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jps</span><br></pre></td></tr></table></figure><p>主机上显示以下进程</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180116/laek5CEcGf.png?imageslim" alt="mark"></p><p>从机显示以下进程</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180116/8ab821igFG.png?imageslim" alt="mark"></p><h4 id="通过Web查看状态"><a href="#通过Web查看状态" class="headerlink" title="通过Web查看状态"></a>通过Web查看状态</h4><p>在主机<code>master</code>上打开浏览器，访问<code>http://localhost:8080</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180116/4igD0E0HI2.png?imageslim" alt="mark"></p><h4 id="运行pyspark"><a href="#运行pyspark" class="headerlink" title="运行pyspark"></a>运行pyspark</h4><p>进入到spark安装目录下的<code>bin</code>文件夹</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/spark-2.2.1-bin-without-hadoop/bin/</span><br></pre></td></tr></table></figure><p>运行<code>pyspark</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./pyspark</span><br></pre></td></tr></table></figure><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180116/4kfiDg4IfL.png?imageslim" alt="mark"></p><h4 id="运行spark-shell"><a href="#运行spark-shell" class="headerlink" title="运行spark-shell"></a>运行spark-shell</h4><p>进入到spark安装目录下的<code>bin</code>文件夹</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/spark-2.2.1-bin-without-hadoop/bin/</span><br></pre></td></tr></table></figure><p>运行<code>spark-shell</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./sparkshell</span><br></pre></td></tr></table></figure><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180116/9DKJiIi12F.png?imageslim" alt="mark"></p><p>以上，证明spark配置成功。</p><h3 id="关闭集群"><a href="#关闭集群" class="headerlink" title="关闭集群"></a>关闭集群</h3><p>同样进入到Spark安装目录下的<code>sbin</code>文件夹</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/spark-2.2.1-bin-without-hadoop/sbin</span><br><span class="line">./stop-all.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Spark的搭建依赖于Hadoop，因此本文基于之前&lt;a href=&quot;https://tianwenyu.github.io/virtualbox-haddop/&quot;&gt;分布式Hadoop环境&lt;/a&gt;，JDK、Hadoop等已安装好，&lt;/p&gt;
&lt;h2 id=&quot;系统环境&quot;&gt;&lt;a href=&quot;#系统环境&quot; class=&quot;headerlink&quot; title=&quot;系统环境&quot;&gt;&lt;/a&gt;系统环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;虚拟机：VirtualBox&lt;/li&gt;
&lt;li&gt;Linux：Ubuntu 16.04 LTS&lt;/li&gt;
&lt;li&gt;HAdoop 2.7.5&lt;/li&gt;
&lt;li&gt;IDE：Intellij IDEA&lt;/li&gt;
&lt;li&gt;JDK 1.8.0_151&lt;/li&gt;
&lt;li&gt;Scala-2.12.4&lt;/li&gt;
&lt;li&gt;Spark-2.2.1&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Spark" scheme="https://tianwenyu.github.io/categories/Spark/"/>
    
    
      <category term="VirtualBox" scheme="https://tianwenyu.github.io/tags/VirtualBox/"/>
    
      <category term="Spark" scheme="https://tianwenyu.github.io/tags/Spark/"/>
    
  </entry>
  
  <entry>
    <title>【分布式编程】二——基于Hadoop的MapReduce程序</title>
    <link href="https://tianwenyu.github.io/hadoop-wordcount/"/>
    <id>https://tianwenyu.github.io/hadoop-wordcount/</id>
    <published>2018-01-12T12:29:30.000Z</published>
    <updated>2018-01-14T06:43:59.818Z</updated>
    
    <content type="html"><![CDATA[<p>此前配置好<a href="https://tianwenyu.github.io/virtualbox-haddop/">分布式Hadoop环境</a>，此篇主要讲解通过Intellij IDEA编写分布式MapReduce程序以及利用Hadoop实现词频统计</p><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><ul><li>虚拟机：VirtualBox</li><li>Linux：Ubuntu 16.04 LTS</li><li>Hadoop 2.7.5</li><li>IDE：Intellij IDEA </li><li>JDK 1.8.0_151<a id="more"></a><h2 id="安装Intellij及破解"><a href="#安装Intellij及破解" class="headerlink" title="安装Intellij及破解"></a>安装Intellij及破解</h2></li></ul><p><a href="https://tianwenyu.github.io/ubuntu-intellij/">安装Intellij IDEA</a></p><p><a href="https://tianwenyu.github.io/Idea2017-license/">破解Intellij IDEA</a></p><h2 id="创建Hadoop工程"><a href="#创建Hadoop工程" class="headerlink" title="创建Hadoop工程"></a>创建Hadoop工程</h2><h3 id="创建新工程"><a href="#创建新工程" class="headerlink" title="创建新工程"></a>创建新工程</h3><ol><li><p>打开Intellij IDEA，创建一个新工程</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180112/FmL2jD01aF.png?imageslim" alt="mark"></p></li><li><p>选择Java项目，并添加JDK路径</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180112/iCAcgIIj3b.png?imageslim" alt="mark"></p></li></ol><h3 id="添加依赖包"><a href="#添加依赖包" class="headerlink" title="添加依赖包"></a>添加依赖包</h3><p>点击<code>File-Project Structure</code></p><p>打开后点击左侧<code>Modules</code>，然后点击<code>Dependencies</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180114/5J0ked69Bk.png?imageslim" alt="mark"></p><p>点击右侧<code>+</code>，选择<code>JARs or directories</code>，将下图所有依赖包的目录导入</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180114/7Al8HAmi0G.png?imageslim" alt="mark"></p><p>【注】<code>/usr/hadoop-2.7.5</code>是Hadoop安装目录</p><h3 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h3><p>新建一个类名为<code>WordCount</code>，代码如下</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.LongWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCount</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenizerMapper</span></span></span><br><span class="line"><span class="class">            <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">Object</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> IntWritable one = <span class="keyword">new</span> IntWritable(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">private</span> Text word = <span class="keyword">new</span> Text();</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(Object key, Text value, Context context</span></span></span><br><span class="line"><span class="function"><span class="params">        )</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">            StringTokenizer itr = <span class="keyword">new</span> StringTokenizer(value.toString());</span><br><span class="line">            <span class="keyword">while</span> (itr.hasMoreTokens()) &#123;</span><br><span class="line">                word.set(itr.nextToken());</span><br><span class="line">                context.write(word, one);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">IntSumReducer</span></span></span><br><span class="line"><span class="class">            <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>,<span class="title">IntWritable</span>,<span class="title">Text</span>,<span class="title">IntWritable</span>&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> IntWritable result = <span class="keyword">new</span> IntWritable();</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values,</span></span></span><br><span class="line"><span class="function"><span class="params">                           Context context</span></span></span><br><span class="line"><span class="function"><span class="params">        )</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (IntWritable val : values) &#123;</span><br><span class="line">                sum += val.get();</span><br><span class="line">            &#125;</span><br><span class="line">            result.set(sum);</span><br><span class="line">            context.write(key, result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Configuration conf = <span class="keyword">new</span> Configuration();</span><br><span class="line">        Job job = Job.getInstance(conf, <span class="string">"word count"</span>);</span><br><span class="line">        job.setJarByClass(WordCount.class);</span><br><span class="line">        job.setMapperClass(TokenizerMapper.class);</span><br><span class="line">        job.setCombinerClass(IntSumReducer.class);</span><br><span class="line">        job.setReducerClass(IntSumReducer.class);</span><br><span class="line">        job.setOutputKeyClass(Text.class);</span><br><span class="line">        job.setOutputValueClass(IntWritable.class);</span><br><span class="line">        FileInputFormat.addInputPath(job, <span class="keyword">new</span> Path(args[<span class="number">0</span>]));</span><br><span class="line">        FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(args[<span class="number">1</span>]));</span><br><span class="line">        System.exit(job.waitForCompletion(<span class="keyword">true</span>) ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置编译环境"><a href="#配置编译环境" class="headerlink" title="配置编译环境"></a>配置编译环境</h3><p>点击<code>Run-Edit Configuration</code></p><p>点击左上角<code>+</code>，然后点击<code>Application</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180114/0Ee3j1CIaF.png?imageslim" alt="mark"></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180114/cdaF1d4HKb.png?imageslim" alt="mark"></p><ul><li><p><code>Name</code>，即该运行配置的名字，这里命名为<code>RunHadoop</code></p></li><li><p><code>Main Class</code>，即需要运行的主类，这里使用的默认包，所以填写<code>WordCount</code></p></li><li><p><code>Program arguments</code>，即运行时需要输入的参数，此处填写参数为<code>hdfs://master:9000/data/input/README.txt hdfs://master:9000/output/</code></p><p>此处，第一个参数为输入文件路径，第二个参数为输出文件路径。</p><p><code>master:9000</code>为<a href="https://tianwenyu.github.io/virtualbox-haddop/">分布式Hadoop环境</a>中<code>core-site.xml</code>配置文件中<code>fs.default.name</code>的值</p><p><code>/data/input/README.txt</code>为<a href="https://tianwenyu.github.io/virtualbox-haddop/">分布式Hadoop环境</a>中利用</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hdfs dfs -mkdir -p /data/input</span><br><span class="line">hdfs dfs -put README.txt /data/input</span><br></pre></td></tr></table></figure><p>创建并上传到HDFS系统中的文件路径。</p></li></ul><p>【注】若<code>hdfs://master:9000/output</code>已经存在，需要手动删除</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hdfs dfs -rm -r /output</span><br></pre></td></tr></table></figure><h3 id="查看运行结果"><a href="#查看运行结果" class="headerlink" title="查看运行结果"></a>查看运行结果</h3><h4 id="web界面查看"><a href="#web界面查看" class="headerlink" title="web界面查看"></a>web界面查看</h4><p>通过<code>http://localhost:50070</code>查看各个结点运行状况</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180114/0jfAihfLm7.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此前配置好&lt;a href=&quot;https://tianwenyu.github.io/virtualbox-haddop/&quot;&gt;分布式Hadoop环境&lt;/a&gt;，此篇主要讲解通过Intellij IDEA编写分布式MapReduce程序以及利用Hadoop实现词频统计&lt;/p&gt;
&lt;h2 id=&quot;系统环境&quot;&gt;&lt;a href=&quot;#系统环境&quot; class=&quot;headerlink&quot; title=&quot;系统环境&quot;&gt;&lt;/a&gt;系统环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;虚拟机：VirtualBox&lt;/li&gt;
&lt;li&gt;Linux：Ubuntu 16.04 LTS&lt;/li&gt;
&lt;li&gt;Hadoop 2.7.5&lt;/li&gt;
&lt;li&gt;IDE：Intellij IDEA &lt;/li&gt;
&lt;li&gt;JDK 1.8.0_151
    
    </summary>
    
      <category term="Hadoop" scheme="https://tianwenyu.github.io/categories/Hadoop/"/>
    
    
      <category term="Hadoop" scheme="https://tianwenyu.github.io/tags/Hadoop/"/>
    
      <category term="文本分类" scheme="https://tianwenyu.github.io/tags/%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>【分布式编程】一——基于VirtualBox的Hadoop完全分布式环境搭建</title>
    <link href="https://tianwenyu.github.io/virtualbox-haddop/"/>
    <id>https://tianwenyu.github.io/virtualbox-haddop/</id>
    <published>2018-01-02T12:29:30.000Z</published>
    <updated>2018-01-22T13:57:17.865Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统架构"><a href="#系统架构" class="headerlink" title="系统架构"></a>系统架构</h2><ul><li><p>虚拟机环境：VirtualBox</p></li><li><p>Linux系统：Ubuntu 16.04 LTS</p></li><li><p>工具包</p><ul><li>JDK1.8</li><li>Hadoop 2.7.5<a id="more"></a></li></ul></li><li><p>拓扑结构：如下</p><p><img src="http://images.cnitblog.com/blog/352072/201311/13134833-69706f5f43ef4920861cab670e300b47.jpg" alt=""></p></li></ul><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>【注】本步骤以<code>Master</code>为例，其他虚拟机可以使用<code>克隆</code>功能复制，然后更改</p><h3 id="安装常用软件"><a href="#安装常用软件" class="headerlink" title="安装常用软件"></a>安装常用软件</h3><h4 id="安装vim"><a href="#安装vim" class="headerlink" title="安装vim"></a>安装<code>vim</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install vim</span><br></pre></td></tr></table></figure><h3 id="安装工具包"><a href="#安装工具包" class="headerlink" title="安装工具包"></a>安装工具包</h3><h4 id="设置共享文件夹"><a href="#设置共享文件夹" class="headerlink" title="设置共享文件夹"></a>设置共享文件夹</h4><ol><li>安装<code>VirtualBox增强功能包</code>,<code>Ubuntu</code>系统直接点击<code>设备-&gt;安装增强功能</code></li><li>剩余步骤看<a href="https://tianwenyu.github.io/linux-share-dir/">教程</a></li></ol><h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><ol><li>下载<a href="http://211.137.51.152/cache/download.oracle.com/otn-pub/java/jdk/8u151-b12/e758a0de34e24606bca991d704f6dcbf/jdk-8u151-linux-x64.tar.gz?ich_args2=98-04210010008329_333dd91cf13b7e9782d179c9dd330695_10001002_9c896529d7c4f1d99738518939a83798_bd613938abecfa80360462399ee84888" target="_blank" rel="external">JDK-8u151</a></li><li>剩余步骤看<a href="https://tianwenyu.github.io/ubuntu-jdk8/">教程</a></li></ol><h3 id="创建用户组"><a href="#创建用户组" class="headerlink" title="创建用户组"></a>创建用户组</h3><h4 id="创建用户组-1"><a href="#创建用户组-1" class="headerlink" title="创建用户组"></a>创建用户组</h4><p>每个主机都需要加入到同一用户组。此处创建名为<code>hadoop</code>用户组</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo addgroup hadoop</span><br></pre></td></tr></table></figure><h4 id="查看当前用户"><a href="#查看当前用户" class="headerlink" title="查看当前用户"></a>查看当前用户</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">who</span><br></pre></td></tr></table></figure><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180105/45iAIB0AEA.png?imageslim" alt="mark"></p><p>当前用户为<code>t</code></p><h4 id="添加当前用户到用户组"><a href="#添加当前用户到用户组" class="headerlink" title="添加当前用户到用户组"></a>添加当前用户到用户组</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo adduser t hadoop <span class="comment">#sudo adduser user group</span></span><br></pre></td></tr></table></figure><h4 id="查看归属用户组"><a href="#查看归属用户组" class="headerlink" title="查看归属用户组"></a>查看归属用户组</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groups t <span class="comment">#group user</span></span><br></pre></td></tr></table></figure><h3 id="安装Hadoop"><a href="#安装Hadoop" class="headerlink" title="安装Hadoop"></a>安装Hadoop</h3><h4 id="下载Hadoop"><a href="#下载Hadoop" class="headerlink" title="下载Hadoop"></a>下载Hadoop</h4><p>点击<a href="http://mirrors.hust.edu.cn/apache/hadoop/common/hadoop-2.7.5/hadoop-2.7.5.tar.gz" target="_blank" rel="external">链接</a>下载</p><h4 id="解压Hadoop"><a href="#解压Hadoop" class="headerlink" title="解压Hadoop"></a>解压Hadoop</h4><p>将文件复制到<code>/Downloads/</code>文件夹下进行解压</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> Downloads/</span><br><span class="line">tar -zxvf hadoop-2.7.5.tar.gz</span><br></pre></td></tr></table></figure><p>将解压后的文件夹移动到<code>/usr/</code>文件夹</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mv hadoop-2.7.5/ /usr/</span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>需要配置的文件都在解压后的<code>hadoop-2.7.5</code>即<code>usr/hadoop-2.7.5/</code>文件夹中的<code>/etc/hadoop/</code>文件夹中</p><h5 id="配置hadoop-env-sh"><a href="#配置hadoop-env-sh" class="headerlink" title="配置hadoop-env.sh"></a>配置<code>hadoop-env.sh</code></h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/hadoop-2.7.5/etc/hadoop/</span><br><span class="line">sudo vim hadoop-env.sh</span><br></pre></td></tr></table></figure><p>添加java安装路径</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180106/Bdki4Ke011.png?imageslim" alt="mark"></p><h5 id="配置core-site-xml"><a href="#配置core-site-xml" class="headerlink" title="配置core-site.xml"></a>配置<code>core-site.xml</code></h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.default.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">final</span>&gt;</span>true<span class="tag">&lt;/<span class="name">final</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/home/t/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span>A base for other temporary   directories.<span class="tag">&lt;/<span class="name">description</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>【说明】</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.default.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此参数设置<code>NameNode</code>的URI，此处设<code>master</code>主机为<code>NameNode</code></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此参数设置Hadoop的一个临时目录，用来存放每次运行的作业jpb的信息。</p><p>此处设置<code>/home/t/hadoop/tmp</code>为临时目录，因没有此目录，因此需要先创建</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir /home/t/hadoop/tmp</span><br></pre></td></tr></table></figure><p>【附】</p><p>其他部分参数，如需要更多参数，请自查</p><table><thead><tr><th>参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>fs.default.name</td><td>file:///</td><td>NameNode的URI</td></tr><tr><td>hadoop.tmp.dir</td><td></td><td>临时目录位置</td></tr><tr><td>hadoop.native.lib</td><td>true</td><td>是否使用hadoop的本地库</td></tr><tr><td>hadoop.http.filter.initializers</td><td>空</td><td>设置Filter初始器</td></tr></tbody></table><h5 id="配置hdfs-site-xml"><a href="#配置hdfs-site-xml" class="headerlink" title="配置hdfs-site.xml"></a>配置<code>hdfs-site.xml</code></h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">             <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">             <span class="tag">&lt;<span class="name">value</span>&gt;</span>/home/t/hadoop/tmp/dfs/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;<span class="name">final</span>&gt;</span>true<span class="tag">&lt;/<span class="name">final</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">              <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">              <span class="tag">&lt;<span class="name">value</span>&gt;</span>/home/t/hadoop/tmp/dfs/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">final</span>&gt;</span>true<span class="tag">&lt;/<span class="name">final</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">               <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">               <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">                 <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.permissions<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">                  <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">         <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>【说明】</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>dfs.name.dir</code>存储永久性的元数据的目录列表。这个目录会创建在<code>master</code>主机上。</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>dfs.data.dir</code>存放数据块的目录列表，这个目录在<code>node1</code>和<code>node2</code>上创建</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>dfs.replication</code>设置文件副本数,此处有两个从机，设置副本数为2</p><h5 id="配置mapred-site-xml"><a href="#配置mapred-site-xml" class="headerlink" title="配置mapred-site.xml"></a>配置<code>mapred-site.xml</code></h5><p>先创建<code>mapred-site.xml</code>，进入到<code>~/etc/hadoop/</code>文件夹下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp mapred-site.xml.template mapred-site.xml</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span>&gt;</span>                                                               </span><br><span class="line">　　　　　　　　<span class="tag">&lt;<span class="name">name</span>&gt;</span>mapred.job.tracker<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:9001<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">           <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="配置slaves"><a href="#配置slaves" class="headerlink" title="配置slaves"></a>配置<code>slaves</code></h5><p>把其他从机的主机名添加，有几个就添加几个，多添加会无法运行</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180106/0E8A9haeKc.png?imageslim" alt="mark"></p><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure><p>将环境变量添加即可</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/hadoop-2.7.5</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HADOOP_HOME</span>/sbin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HADOOP_HOME</span>/bin</span><br></pre></td></tr></table></figure><p>更新生效</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>运行是否配置环境变量成功</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hadoop version</span><br></pre></td></tr></table></figure><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180106/d33m83gH4c.png?imageslim" alt="mark"></p><p>【注】此步骤完成之后，可以克隆两个虚拟机分别命名为<code>node1</code>,<code>node2</code></p><h3 id="更改网络配置"><a href="#更改网络配置" class="headerlink" title="更改网络配置"></a>更改网络配置</h3><h4 id="虚拟机设置"><a href="#虚拟机设置" class="headerlink" title="虚拟机设置"></a>虚拟机设置</h4><p>【注】所有虚拟机都需要进行此步操作</p><p>点击<code>控制-&gt;设置-&gt;网络</code>，连接方式选择<code>桥接网卡</code>，然后重启虚拟机</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180105/k7DhdFD55d.png?imageslim" alt="mark"></p><h4 id="修改Hostname"><a href="#修改Hostname" class="headerlink" title="修改Hostname"></a>修改<code>Hostname</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/hostname</span><br></pre></td></tr></table></figure><p>【注】其他虚拟机修改其<code>Hostname</code>为相应的名称</p><p>以<code>master</code>为例，直接改为</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180105/Am7I9dldGl.png?imageslim" alt="mark"></p><h4 id="修改hosts文件"><a href="#修改hosts文件" class="headerlink" title="修改hosts文件"></a>修改<code>hosts</code>文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/hosts</span><br></pre></td></tr></table></figure><p>增加以下内容，所有虚拟机都要增加以下内容</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">10.10.11.191 master</span><br><span class="line">10.10.11.192 node1</span><br><span class="line">10.10.11.193 node2</span><br></pre></td></tr></table></figure><p>其中<code>127.0.0.1    oldhostname</code>删掉</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180115/Flg9kKlDdg.png?imageslim" alt="mark"></p><h4 id="更改IP地址、网关"><a href="#更改IP地址、网关" class="headerlink" title="更改IP地址、网关"></a>更改IP地址、网关</h4><p>【注】此处以<code>master</code>主机为例，其他主机根据上述拓扑图做相应更改</p><p>1.更改IP</p><p>利用<code>ifconfig</code>命令查看网卡名称，然后更改设置，本虚拟机网卡为<code>enp0s3</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ifconfig  enp0s3 10.10.11.191/24</span><br></pre></td></tr></table></figure><p>【注】此种更改IP的方法，系统重启后需要重新配置</p><p>2.更改网关</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo route add default gw 10.10.11.1</span><br></pre></td></tr></table></figure><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="built_in">disable</span></span><br><span class="line">sudo apt-get remove iptables</span><br></pre></td></tr></table></figure><p>【注】此步骤后即可利用<code>VirtualBox</code>克隆功能复制出其他从机</p><h4 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h4><p>使用<code>ping</code>命令测试是否能够连接</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ping hostname</span><br></pre></td></tr></table></figure><h3 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h3><h4 id="安装ssh"><a href="#安装ssh" class="headerlink" title="安装ssh"></a>安装ssh</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ssh</span><br></pre></td></tr></table></figure><h4 id="查看已安装的ssh"><a href="#查看已安装的ssh" class="headerlink" title="查看已安装的ssh"></a>查看已安装的ssh</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg --list|grep ssh</span><br></pre></td></tr></table></figure><p>如果缺少<code>openssh-server</code>，需要安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure><h4 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h4><p>下述步骤在不同的主机上进行，请注意区分</p><h5 id="master机操作"><a href="#master机操作" class="headerlink" title="master机操作"></a><code>master</code>机操作</h5><ol><li><p>生成<code>master</code>机的一对公钥和私钥</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -P <span class="string">''</span></span><br></pre></td></tr></table></figure></li><li><p>进入<code>.ssh</code>目录查看公钥和私钥，<code>id_rsa</code>和<code>id_rsa.pub</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> .ssh</span><br><span class="line">ls</span><br></pre></td></tr></table></figure></li><li><p>将公钥加入到已认证的key中</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>登录本机</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh localhost</span><br></pre></td></tr></table></figure></li></ol><p>如果出现<code>The authenticity of host &#39;localhost (127.0.0.1)&#39; can&#39;t be established.</code>，输入<code>yes</code>即可。</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180106/Ak4cdCc3Kb.png?imageslim" alt="mark"></p><h5 id="其他从机操作"><a href="#其他从机操作" class="headerlink" title="其他从机操作"></a>其他从机操作</h5><ol><li>将<code>master</code>主机上的<code>id_rsa.pub</code>复制到<code>node1</code>从机上。同理<code>node2</code>进行类似操作</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp ~/.ssh/id_rsa.pub t@node1:~/</span><br></pre></td></tr></table></figure><p>然后再在从机执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat ~/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>若遇到<code>/home/t/.ssh/node1_rsa.pub: No such file or directory</code>，则手动通过共享文件夹复制到其他从机相应位置。</p><p>若从机<code>cd .ssh</code>遇到<code>No such file or directory</code>，则手工创建<code>.ssh</code>文件夹。</p><ul><li>在<code>/home/t</code>图形化界面按<code>Ctrl+H</code>显示隐藏文件夹，</li><li>若已经存在<code>.ssh</code>文件夹，则删除<code>suso rm -r /home/t/.ssh</code>。这里的<code>/home/t</code>是用户目录，<code>t</code>是用户名，其他用户名则需要做相应更改。</li><li>若没有<code>.ssh</code>文件夹，则创建<code>sudo mkdir /home/t/.ssh</code></li><li>更改权限<code>sudo chmod a+w /home/t/.ssh</code></li><li>通过共享文件夹把<code>master</code>中的<code>id_rsa.pub</code>复制到<code>/home/t/</code>中</li></ul><ol><li><p>将<code>master</code>主机上的密钥加入到认证中</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat ~/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>在<code>master</code>主机上验证能否正常登陆</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh node1</span><br></pre></td></tr></table></figure></li></ol><p>出现以下则表示登陆成功</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180107/Cmaj7d6h9m.png?imageslim" alt="mark"></p><h3 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h3><h4 id="格式化namenode"><a href="#格式化namenode" class="headerlink" title="格式化namenode"></a>格式化<code>namenode</code></h4><p>在主机<code>master</code>运行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hadoop namenode -format</span><br></pre></td></tr></table></figure><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180106/0JG2119BIL.png?imageslim" alt="mark"></p><p>若出现<code>has been successfully formatted</code>和<code>Exiting with status 0</code>表示格式化成功</p><p>若出现<code>hadoop:Cannot create directory /home/t/hadoop/name/current</code>错误即文件夹权限不足</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo chmod -R a+w /home/t/hadoop/name/current</span><br></pre></td></tr></table></figure><h4 id="启动集群-1"><a href="#启动集群-1" class="headerlink" title="启动集群"></a>启动集群</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">start-all.sh</span><br></pre></td></tr></table></figure><p>启动完毕后，执行命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jps</span><br></pre></td></tr></table></figure><p>若<code>master</code>主机看到四个开启的进程代表启动成功</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180107/D9LHidejII.png?imageslim" alt="mark"></p><p>若从机上看到启动进程</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180111/H0K6e8lcAA.png?imageslim" alt="mark"></p><p>【问题解释】<a href="https://www.cnblogs.com/dream-to-pku/p/7249954.html" target="_blank" rel="external">为什么没有<code>jobtracker</code>和<code>tasktracker</code></a></p><h4 id="停止集群"><a href="#停止集群" class="headerlink" title="停止集群"></a>停止集群</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">stop-all.sh</span><br></pre></td></tr></table></figure><h4 id="查看运行状态"><a href="#查看运行状态" class="headerlink" title="查看运行状态"></a>查看运行状态</h4><h5 id="查看Namenode状况"><a href="#查看Namenode状况" class="headerlink" title="查看Namenode状况"></a>查看<code>Namenode</code>状况</h5><p>通过Web界面查看<code>NameNode</code>运行状况，默认为<code>http://localhost:50070</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180112/A57l3cd9Kh.png?imageslim" alt="mark"></p><h5 id="查看ResourceManager状况"><a href="#查看ResourceManager状况" class="headerlink" title="查看ResourceManager状况"></a>查看<code>ResourceManager</code>状况</h5><p><code>http://localhost:8088</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180112/JgjE12CA4f.png?imageslim" alt="mark"></p><h3 id="运行测试程序"><a href="#运行测试程序" class="headerlink" title="运行测试程序"></a>运行测试程序</h3><p>向hadoop集群系统提交第一个mapreduce任务，统计词频</p><ol><li><p>进入本地hadoop目录.此处是<code>/usr/hadoop-2.7.5</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/hadoop-2.7.5</span><br></pre></td></tr></table></figure></li><li><p>在虚拟分布式文件系统上创建一个目录<code>/data/input</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hdfs dfs -mkdir -p /data/input</span><br></pre></td></tr></table></figure></li><li><p>将当前目录下的<code>README.txt</code>复制到虚拟分布式文件系统中</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hdfs dfs -put README.txt /data/input</span><br></pre></td></tr></table></figure></li><li><p>查看虚拟分布式文件系统中是否有复制上去的文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hdfs dfs -ls /data/input</span><br></pre></td></tr></table></figure></li><li><p>向Hadoop提交单词统计任务</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.5.jar wordcount /data/input /data/output/result</span><br></pre></td></tr></table></figure></li><li><p>查看结果</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hdfs dfs -cat /data/output/result/part-r-00000</span><br></pre></td></tr></table></figure></li></ol><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180112/6EJGHl8D37.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;系统架构&quot;&gt;&lt;a href=&quot;#系统架构&quot; class=&quot;headerlink&quot; title=&quot;系统架构&quot;&gt;&lt;/a&gt;系统架构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;虚拟机环境：VirtualBox&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Linux系统：Ubuntu 16.04 LTS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;工具包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK1.8&lt;/li&gt;
&lt;li&gt;Hadoop 2.7.5
    
    </summary>
    
      <category term="Hadoop" scheme="https://tianwenyu.github.io/categories/Hadoop/"/>
    
    
      <category term="VirtualBox" scheme="https://tianwenyu.github.io/tags/VirtualBox/"/>
    
      <category term="Hadoop" scheme="https://tianwenyu.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题之NextD</title>
    <link href="https://tianwenyu.github.io/hexo-next/"/>
    <id>https://tianwenyu.github.io/hexo-next/</id>
    <published>2018-01-01T11:29:36.000Z</published>
    <updated>2018-01-01T09:59:36.554Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本次更改的主题为<a href="https://github.com/BearD01001/hexo-theme-nextd" target="_blank" rel="external">NextD</a>，一款基于<code>NexT</code>而修改的主题。</p><a id="more"></a><p>##集成Gitment评论系统</p><ul><li><p>点击<a href="https://github.com/settings/applications/new注册" target="_blank" rel="external">https://github.com/settings/applications/new注册</a></p></li><li><p>填写内容</p><ul><li><p><code>Application name</code></p><p>随便填写</p></li><li><p><code>Homepage URL</code></p><p>填写你的个人博客域名如<code>https://tianwenyu.github.io</code>。</p><p>【注】前面的<code>https://</code>也要完整填写</p></li><li><p><code>Application description</code></p><p>随便填写</p></li><li><p><code>Authorization callback URL</code></p><p>同<code>Homepage URL</code></p></li></ul></li><li><p>在github的个人主页的<code>issue</code>页面可以看到网站评论</p></li></ul><p>##开启本地搜索功能</p><p>安装<code>Local Search</code></p><ul><li><p>安装<code>hexo-generator-searchdb</code>，在站点根目录下执行以下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li></ul><h2 id="开启CNZZ统计功能"><a href="#开启CNZZ统计功能" class="headerlink" title="开启CNZZ统计功能"></a>开启CNZZ统计功能</h2><ul><li><p>打开<a href="http://www.umeng.com/" target="_blank" rel="external">网址</a>，注册个人帐号</p></li><li><p>登陆后，点击<code>个人中心</code></p></li><li><p>点击<code>U-Web</code>,之后点击<code>立即使用</code></p></li><li><p>添加站点</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180101/6g9CKD9LhD.png?imageslim" alt="mark"></p><p>填写<code>网站域名</code>即可</p></li><li><p>将网站id填写到<code>./themes/nextd/_config.yml</code>中的<code>cnzz_siteid</code>。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;本次更改的主题为&lt;a href=&quot;https://github.com/BearD01001/hexo-theme-nextd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NextD&lt;/a&gt;，一款基于&lt;code&gt;NexT&lt;/code&gt;而修改的主题。&lt;/p&gt;
    
    </summary>
    
      <category term="个人建站" scheme="https://tianwenyu.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="Hexo" scheme="https://tianwenyu.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Windows中CMD命令之Tree生成目录</title>
    <link href="https://tianwenyu.github.io/cmd-tree/"/>
    <id>https://tianwenyu.github.io/cmd-tree/</id>
    <published>2018-01-01T07:29:36.000Z</published>
    <updated>2018-01-04T13:28:56.694Z</updated>
    
    <content type="html"><![CDATA[<h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>以图形显示驱动器或路径的文件夹结构</p><h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tree [path] [/f] [/a]</span><br><span class="line"><span class="comment">#/f 显示每个文件中文件的名称</span></span><br><span class="line"><span class="comment">#/a 使用ASCII字符，而不使用扩展字符</span></span><br></pre></td></tr></table></figure><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tree C:\Users\Administrator\.android /f &gt;F:\path\android-tree.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;作用&quot;&gt;&lt;a href=&quot;#作用&quot; class=&quot;headerlink&quot; title=&quot;作用&quot;&gt;&lt;/a&gt;作用&lt;/h2&gt;&lt;p&gt;以图形显示驱动器或路径的文件夹结构&lt;/p&gt;
&lt;h2 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="Windows" scheme="https://tianwenyu.github.io/categories/Windows/"/>
    
    
      <category term="Windows" scheme="https://tianwenyu.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>深入理解Java多态性</title>
    <link href="https://tianwenyu.github.io/java-polymorphism/"/>
    <id>https://tianwenyu.github.io/java-polymorphism/</id>
    <published>2017-12-29T12:29:30.000Z</published>
    <updated>2017-12-30T11:56:34.839Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实例分析"><a href="#实例分析" class="headerlink" title="实例分析"></a>实例分析</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(D obj)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="string">"A and D"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(A obj)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="string">"A and A"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(B obj)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="string">"B and B"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">show</span><span class="params">(A obj)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="string">"B and A"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">B</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">D</span> <span class="keyword">extends</span> <span class="title">B</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    A a1 = <span class="keyword">new</span> A();</span><br><span class="line">    A a2 = <span class="keyword">new</span> B();</span><br><span class="line">    B b  = <span class="keyword">new</span> B();</span><br><span class="line">    C c  = <span class="keyword">new</span> C();</span><br><span class="line">    D d  = <span class="keyword">new</span> D();</span><br><span class="line">    </span><br><span class="line">    System.out.println(<span class="string">"1--"</span> + a1.show(b));  </span><br><span class="line">System.out.println(<span class="string">"2--"</span> + a1.show(c));  </span><br><span class="line">System.out.println(<span class="string">"3--"</span> + a1.show(d));  </span><br><span class="line">System.out.println(<span class="string">"4--"</span> + a2.show(b));  </span><br><span class="line">System.out.println(<span class="string">"5--"</span> + a2.show(c));  </span><br><span class="line">System.out.println(<span class="string">"6--"</span> + a2.show(d));  </span><br><span class="line">System.out.println(<span class="string">"7--"</span> + b.show(b));  </span><br><span class="line">System.out.println(<span class="string">"8--"</span> + b.show(c));  </span><br><span class="line">System.out.println(<span class="string">"9--"</span> + b.show(d));  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>运行结果：</p><p><img src="http://img.blog.csdn.net/20160607110950217?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>①②③比较好理解，一般不会出错。④⑤就有点糊涂了，为什么输出的不是”B and B”呢？</p> <font color="#0099ff">当超类对象引用变量引用子类对象时，被引用对象的类型而不是引用变量的类型决定了调用谁的成员方法，但是这个被调用的方法必须是在超类中定义过的，也就是说被子类覆盖的方法。</font>（但是如果强制把超类转换成子类的话，就可以调用子类中新添加而超类没有的方法了。）<br><br><font color="#0099ff"> 在继承链中对象方法的调用存在一个优先级：this.show(O)、super.show(O)、this.show((super)O)、super.show((super)O)。</font><p>上面程序中的A,B,C,D存在如下关系：</p><p><img src="http://img.blog.csdn.net/20160607112132795?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p><p>分析4：</p><p>​    a2.show(b)，a2是一个引用变量，类型为A，则this为a2，b是B的一个实例，于是它到类A里面找show(B obj)方法，没有找到，于是到A的super(超类)找，而A没有超类，因此转到第三优先级this.show((super)O)，this仍然是a2，这里O为B，(super)O即(super)B即A，因此它到类A里面找show(A obj)的方法，类A有这个方法，但是由于a2引用的是类B的一个对象，B覆盖了A的show(A obj)方法，因此最终锁定到类B的show(A obj)，输出为”B and A”。</p><p>分析5：</p><p>​    a2.show(c)，a2是A类型的引用变量，所以this就代表了A，a2.show(c),它在A类中找发现没有找到，于是到A的超类中找(super)，由于A没有超类（Object除外），所以跳到第三级，也就是this.show((super)O)，C的超类有B、A，所以(super)O为B、A，this同样是A，这里在A中找到了show(A obj)，同时由于a2是B类的一个引用且B类重写了show(A<br> obj)，因此最终会调用子类B类的show(A obj)方法，结果也就是B and A。</p><p>分析8：</p><p>​    b.show(c)，b是一个引用变量，类型为B，则this为b，c是C的一个实例，于是它到类B找show(C obj)方法，没有找到，转而到B的超类A里面找，A里面也没有，因此也转到第三优先级this.show((super)O)，this为b，O为C，(super)O即(super)C即B，因此它到B里面找show(B obj)方法，找到了，由于b引用的是类B的一个对象，因此直接锁定到类B的show(B obj)，输出为”B and B”。</p><p>​    按照同样的方法我也可以确认其他的答案。</p><p>   <font color="DC143C"><strong>当超类对象引用变量引用子类对象时，被引用对象的类型而不是引用变量的类型决定了调用谁的成员方法，但是这个被调用的方法必须是在超类中定义过的，也就是说被子类覆盖的方法。</strong></font>这我们用一个例子来说明这句话所代表的含义：a2.show(b)；</p><p>​    这里a2是引用变量，为A类型，它引用的是B对象，因此按照上面那句话的意思是说有B来决定调用谁的方法,所以a2.show(b)应该要调用B中的show(B obj)，产生的结果应该是“B and B”，但是为什么会与前面的运行结果产生差异呢？这里我们忽略了后面那句话“  <font color="DC143C"><strong>被调用的方法必须是在超类中定义过的</strong></font>”，那么show(B obj)在A类中存在吗？根本就不存在！所以这句话在这里不适用？那么难道是这句话错误了？非也！其实这句话还隐含这这句话：  <font color="DC143C"><strong>它仍然要按照继承链中调用方法的优先级来确认</strong></font>。所以它才会在A类中找到show(A obj)，同时由于B重写了该方法所以才会调用B类中的方法，否则就会调用A类中的方法。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;实例分析&quot;&gt;&lt;a href=&quot;#实例分析&quot; class=&quot;headerlink&quot; title=&quot;实例分析&quot;&gt;&lt;/a&gt;实例分析&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(D obj)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;A and D&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(A obj)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;A and A&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(B obj)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;B and B&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(A obj)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;B and A&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Test&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    A a1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; A();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    A a2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; B();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    B b  = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; B();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    C c  = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; C();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    D d  = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; D();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;1--&quot;&lt;/span&gt; + a1.show(b));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;2--&quot;&lt;/span&gt; + a1.show(c));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;3--&quot;&lt;/span&gt; + a1.show(d));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;4--&quot;&lt;/span&gt; + a2.show(b));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;5--&quot;&lt;/span&gt; + a2.show(c));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;6--&quot;&lt;/span&gt; + a2.show(d));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;7--&quot;&lt;/span&gt; + b.show(b));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;8--&quot;&lt;/span&gt; + b.show(c));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;9--&quot;&lt;/span&gt; + b.show(d));  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Java" scheme="https://tianwenyu.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://tianwenyu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>利用Github Pages+Hexo搭建个人博客</title>
    <link href="https://tianwenyu.github.io/gitpage-hexo/"/>
    <id>https://tianwenyu.github.io/gitpage-hexo/</id>
    <published>2017-12-20T11:29:36.000Z</published>
    <updated>2018-01-16T03:32:00.591Z</updated>
    
    <content type="html"><![CDATA[<h2 id="技术简介"><a href="#技术简介" class="headerlink" title="技术简介"></a>技术简介</h2><h3 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h3><p><a href="https://pages.github.com/" target="_blank" rel="external">GitHub Pages</a> 本来用于介绍托管在Github上的项目，由于它的空间免费稳定，因此适合用来搭建博客。</p><p>每个帐号只能有一个仓库来存放个人主页，且仓库的名字必须是<code>username/username.github.io</code>。你可以通过<code>http://username.github.io</code>来访问你的个人主页</p><p>个人主页的网站内容是在master分支下</p><a id="more"></a><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>Hexo是一个快速、简洁高效的博客框架，具有如下特点：</p><ul><li>生成静态网页</li><li>支持Markdown</li><li>一键部署博客到Github Pages</li><li>丰富插件</li></ul><h3 id="七牛云"><a href="#七牛云" class="headerlink" title="七牛云"></a>七牛云</h3><p>使用七牛云作为图床。</p><p>认证后的七牛云存储提供10G的免费空间以及每月10G的流量</p><h3 id="MPic"><a href="#MPic" class="headerlink" title="MPic"></a>MPic</h3><p>用于方便上传图片到七牛云的一款工具</p><p><a href="http://ojalbwkyk.bkt.clouddn.com/MPic%202.2.1.3.rar" target="_blank" rel="external">点击下载</a></p><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>进入网站<code>https://git-scm.com/</code>下载安装即可</p><h3 id="Node-JS"><a href="#Node-JS" class="headerlink" title="Node.JS"></a>Node.JS</h3><h4 id="安装Node-JS"><a href="#安装Node-JS" class="headerlink" title="安装Node.JS"></a>安装Node.JS</h4><p>进入网站<code>https://nodejs.org/en/</code>，下载安装即可</p><h3 id="Hexo-1"><a href="#Hexo-1" class="headerlink" title="Hexo"></a>Hexo</h3><h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>在任意位置右键点击<code>Git Bash Here</code></p><p>使用<code>npm</code>安装<code>hexo</code>，可以先切换npm源，加速安装过程</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><p>【注】若安装不成功，可以使用<code>npm install hexo --save</code>再次安装</p><p>出现以下图示表示安装完成。</p><p>【注】若提示<code>This package is no longer maintained</code>，耐心等待安装即可。</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171220/H7LkIa35Gb.jpg?imageslim" alt="mark"></p><h4 id="配置Hexo"><a href="#配置Hexo" class="headerlink" title="配置Hexo"></a>配置Hexo</h4><h5 id="创建hexo文件夹"><a href="#创建hexo文件夹" class="headerlink" title="创建hexo文件夹"></a>创建hexo文件夹</h5><p>在某一文件夹下如<code>F:\hexo\blog</code>，右键<code>Git Bash Here</code>，使用以下命令创建建立网站需要的文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171220/Fg6728KdiK.jpg?imageslim" alt="mark"></p><h5 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171220/B7lkme9mkb.jpg?imageslim" alt="mark"></p><h5 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate <span class="comment">#生成静态文件，会在当前目录下生成一个新的名为public的文件夹</span></span><br></pre></td></tr></table></figure><h5 id="启动Hexo"><a href="#启动Hexo" class="headerlink" title="启动Hexo"></a>启动Hexo</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server -p 5000 <span class="comment">#使用hexo server 默认端口4000，会无法访问localhost:4000，因此改为5000端口</span></span><br></pre></td></tr></table></figure><h5 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo <span class="built_in">help</span> <span class="comment">#查看帮助</span></span><br><span class="line">hexo -v <span class="comment">#查看本地环境</span></span><br><span class="line">hexo init <span class="comment">#初始化一个目录</span></span><br><span class="line">hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo gernerate <span class="comment">#生成网页，可以在public目录查看整个网站的文件</span></span><br><span class="line">hexo server <span class="comment">#本地预览 Ctrl+C关闭</span></span><br><span class="line">hexo deploy <span class="comment">#或hexo d 部署到远端如github、heroku</span></span><br><span class="line">hexo clean <span class="comment">#清除缓存 建议每次执行命令前先清理缓存，每次部署前先删除 .deploy文件夹</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#常用缩写</span></span><br><span class="line">hexo n  <span class="comment">#hexo new</span></span><br><span class="line">hexo g  <span class="comment">#hexo generate</span></span><br><span class="line">hexo s  <span class="comment">#hexo server</span></span><br><span class="line">hexo d  <span class="comment">#hexo deploy</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#常用组合</span></span><br><span class="line">hexo d -g <span class="comment">#生成部署</span></span><br><span class="line">hexo s -g <span class="comment">#生成预览</span></span><br></pre></td></tr></table></figure><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><h3 id="Github-Pages-1"><a href="#Github-Pages-1" class="headerlink" title="Github  Pages"></a>Github  Pages</h3><h4 id="创建页面仓库"><a href="#创建页面仓库" class="headerlink" title="创建页面仓库"></a>创建页面仓库</h4><p>创建一个仓库，需要和帐号对应，格式<code>yourname.github.io</code>，创建仓库</p><p><img src="http://upload-images.jianshu.io/upload_images/695365-65754452ea96e1cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p><p><img src="http://upload-images.jianshu.io/upload_images/695365-e4fb878d83a8a2e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p><h4 id="生成SSH密钥"><a href="#生成SSH密钥" class="headerlink" title="生成SSH密钥"></a>生成SSH密钥</h4><p>任意地方右键<code>Git Bash Here</code>,执行以下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"你的邮箱地址"</span></span><br></pre></td></tr></table></figure><p>出现<code>Enter file in which to save the key (.....)</code>直接回车选择默认位置</p><p>出现<code>Enter passphrase(empty for no passphrase)</code>直接两次回车不设密码以及确认</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171220/5hEC4d6K1m.jpg?imageslim" alt="mark"></p><h4 id="在Github上添加SSH密钥"><a href="#在Github上添加SSH密钥" class="headerlink" title="在Github上添加SSH密钥"></a>在Github上添加SSH密钥</h4><p>打开<code>id_rsa.pub</code>，复制内容。</p><p>进入<code>https://github.com/settings/ssh</code>。</p><p>点击<code>New SSH key</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171220/8HbiiJFCgB.jpg?imageslim" alt="mark"></p><p>填写后点击<code>Add SSH key</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171220/CgdkDEDim9.jpg?imageslim" alt="mark"></p><h3 id="Hexo-2"><a href="#Hexo-2" class="headerlink" title="Hexo"></a>Hexo</h3><h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171220/dLaLgf5B36.jpg?imageslim" alt="mark"></p><ul><li><code>deploy</code> #需要部署的文件</li><li><code>node_modules</code> #Hexo插件</li><li><code>public</code> #生成的静态网页文件</li><li><code>scaffolds</code> #模板</li><li><code>source</code> #博客正文和其他源文件</li><li><code>drafs</code> #草稿</li><li><code>posts</code>#文章</li><li><code>themes</code> #主题</li><li><code>config.yml</code> #配置文件</li></ul><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><ol><li>上述步骤中在Github上创建的那个仓库<code>username.github.io</code>，可以通过该链接访问</li><li>Hexo -g 会生成一个静态网站，第一次会生成一个public目录，这个静态文件可以直接访问</li><li>需要将Hexo生成的静态网站，提交(git commit)到github上</li></ol><h5 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h5><p>需要在<code>_config.yml</code>中修改</p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repository</span>: <span class="attribute">http</span>:<span class="comment">//github.com/tianwenyu/tianwenyu.github.io.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure><p>【注】</p><ul><li><code>repository:</code>后面的<code>tianwenyu/tainwenyu.github.io.git</code>要与自己创建的仓库名保持一致</li></ul><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171220/CDcaJlKgEI.jpg?imageslim" alt="mark"></p><ul><li><code>.yml</code>文件对格式要求严格，<code>type:</code> <code>repository:</code> <code>branch:</code> 前面两个空格，冒号后面一个空格</li></ul><p>安装依赖包</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>配置好之后执行</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo genearte</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>【注】以上命令执行的环境必须在执行<code>hexo init</code>创建的文件夹下执行</p><p>执行完以上命令，会出现页面输入你的github用户名和密码，验证后就可以上传成功</p><p>访问<code>tianwenyu.github.io</code>，成功打开页面即部署成功。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>选择的主题为<a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="external">indigo</a>，具体问题可以看链接。</p><h5 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h5><p>安装前确认你的Hexo版本在3.0以上，以及Node版本为6.x以上，在Hexo根目录，执行以下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</span><br></pre></td></tr></table></figure><h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h5><ul><li><p>安装<code>Less</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-less --save</span><br></pre></td></tr></table></figure></li><li><p>安装<code>Feed</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></li><li><p>安装<code>Json-content</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure></li><li><p>安装<code>QRCode</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-helper-qrcode --save</span><br></pre></td></tr></table></figure></li></ul><h5 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h5><p>编辑站点配置文件<code>hexo/_config.yml</code></p><p>搜索<code>theme</code>，修改为<code>theme: indigo</code></p><h5 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h5><p>修改以下内容</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">your</span> <span class="string">title</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">your</span> <span class="string">subtitle</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">your</span> <span class="string">description</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">your</span> <span class="string">keywords</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">your</span> <span class="string">name</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">your</span> <span class="string">email</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">your</span> <span class="string">site</span> <span class="string">url</span></span><br></pre></td></tr></table></figure><h5 id="indigo主题配置"><a href="#indigo主题配置" class="headerlink" title="indigo主题配置"></a><code>indigo</code>主题配置</h5><p>编辑主题配置文件<code>hexo/themes/_config.yml</code></p><p>详情见<a href="https://github.com/yscoder/hexo-theme-indigo/wiki/%E9%85%8D%E7%BD%AE" target="_blank" rel="external">indigo主题配置</a></p><h5 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h5><p><code>hexo new &quot;postname&quot;</code></p><p>该命令会自动在<code>hexo/source/_post</code>文件夹下创建一个名为<code>postname</code>的<code>markdown</code>文件，会自动在文件开头添加</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 你的题目</span><br><span class="line">tags: 你的标签</span><br><span class="line">category: 你的分类</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>填写<code>tags</code>,<code>category</code>，新建标签页面和分类页面后即可以显示相应的标签和分类</p><h5 id="新建标签页面"><a href="#新建标签页面" class="headerlink" title="新建标签页面"></a>新建标签页面</h5><p><code>hexo new page tags</code></p><p>该命令会自动在<code>hexo/source</code>文件夹下创建<code>tags</code>文件夹并在该文件夹下创建<code>index.md</code>文件。</p><p>修改<code>index.md</code>文件，添加以下两项</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">layout: tags</span><br><span class="line">comments: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h5 id="新建分类页面"><a href="#新建分类页面" class="headerlink" title="新建分类页面"></a>新建分类页面</h5><p><code>hexo new page categories</code></p><p>该命令会自动在<code>hexo/source</code>文件夹下创建<code>categories</code>文件夹并在该文件夹下创建<code>index.md</code>文件</p><p>修改<code>index.md</code>文件，添加以下两项：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">layout: categories</span><br><span class="line">comments: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="Mpic"><a href="#Mpic" class="headerlink" title="Mpic"></a>Mpic</h3><ol><li><p>点击<code>设置账号</code></p><p><img src="https://mpic.kf5.com/attachments/download/1171222/0015808404e34f1e31116ea6cd92ed2/" alt=""></p></li><li><p>将七牛云对应信息填入</p><p><img src="https://mpic.kf5.com/attachments/download/1171231/001580840995e265db04376c8e74582/" alt=""></p><ul><li><p><code>空间名称</code>：七牛存储文件的空间名，这里选择<code>tpic</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180116/ifG5beD76H.png?imageslim" alt="mark"></p></li><li><p><code>SecretKey&amp;AccessKey</code>：点击<code>个人面板-密钥管理</code></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180116/BkGJII7KJI.png?imageslim" alt="mark"></p></li><li><p><code>域名</code>：点击<code>对象存储</code>，在<code>空间概览</code>页面</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180116/LJ0Fi6jG0e.png?imageslim" alt="mark"></p></li></ul><p>​</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;技术简介&quot;&gt;&lt;a href=&quot;#技术简介&quot; class=&quot;headerlink&quot; title=&quot;技术简介&quot;&gt;&lt;/a&gt;技术简介&lt;/h2&gt;&lt;h3 id=&quot;Github-Pages&quot;&gt;&lt;a href=&quot;#Github-Pages&quot; class=&quot;headerlink&quot; title=&quot;Github Pages&quot;&gt;&lt;/a&gt;Github Pages&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://pages.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub Pages&lt;/a&gt; 本来用于介绍托管在Github上的项目，由于它的空间免费稳定，因此适合用来搭建博客。&lt;/p&gt;
&lt;p&gt;每个帐号只能有一个仓库来存放个人主页，且仓库的名字必须是&lt;code&gt;username/username.github.io&lt;/code&gt;。你可以通过&lt;code&gt;http://username.github.io&lt;/code&gt;来访问你的个人主页&lt;/p&gt;
&lt;p&gt;个人主页的网站内容是在master分支下&lt;/p&gt;
    
    </summary>
    
      <category term="个人建站" scheme="https://tianwenyu.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="Hexo" scheme="https://tianwenyu.github.io/tags/Hexo/"/>
    
      <category term="GitPage" scheme="https://tianwenyu.github.io/tags/GitPage/"/>
    
  </entry>
  
  <entry>
    <title>Hexo之Indigo主题配置</title>
    <link href="https://tianwenyu.github.io/hexo-indigo/"/>
    <id>https://tianwenyu.github.io/hexo-indigo/</id>
    <published>2017-12-01T12:29:30.000Z</published>
    <updated>2018-01-02T06:38:59.871Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正文宽度加宽"><a href="#正文宽度加宽" class="headerlink" title="正文宽度加宽"></a>正文宽度加宽</h2><p><code>/themes/indigo/source/css/_partial/variable.less</code></p><p>把<code>@contentWidth: 960px</code>改成<code>@contentWidth: 90%</code></p><p>同时<code>config</code>文件中修改<code>cdn:false</code></p><a id="more"></a><h2 id="Header高度调整"><a href="#Header高度调整" class="headerlink" title="Header高度调整"></a>Header高度调整</h2><ol><li>themes/indigo/source/css/_partial/header.less`</li></ol><p>修改<code>content-header</code>下的</p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.content-header</span> &#123;</span><br><span class="line">    <span class="comment">//min-height: 210px;</span></span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">240px</span>;</span><br><span class="line">    <span class="comment">//padding: 104px 16px 48px 256px;</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">50px</span> <span class="number">16px</span> <span class="number">5px</span> <span class="number">256px</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="variable">@textPrimaryColor</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">@primaryColor</span>;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">1px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>把<code>min-height</code>注释掉</p><p>修改<code>padding:50px 16px 5px 256px;</code></p><p>根据<code>https://github.com/OhYee/hexo-theme-indigo/tree/OhYee</code>更改</p><ol><li><p>同时调整<code>themes/indigo/source/css/_partial/article.less</code></p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-card</span> &#123;</span><br><span class="line">    <span class="comment">//margin-top: -150px;</span></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">min-height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">30px</span> rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">2</span>);</span><br><span class="line">    <span class="selector-class">.post-meta</span> &#123;</span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改<code>margin-top: 0px</code></p><h2 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h2><p>若是想要更改其他版本主题，如本主题其他人修改的主题，可以直接放到<code>/themes</code>文件夹下，重命名。再在<code>./config.yml</code>里更改主题。</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171230/mLeclJ1796.png?imageslim" alt="mark"></p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171230/L9fKf1715I.png?imageslim" alt="mark"></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;正文宽度加宽&quot;&gt;&lt;a href=&quot;#正文宽度加宽&quot; class=&quot;headerlink&quot; title=&quot;正文宽度加宽&quot;&gt;&lt;/a&gt;正文宽度加宽&lt;/h2&gt;&lt;p&gt;&lt;code&gt;/themes/indigo/source/css/_partial/variable.less&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;把&lt;code&gt;@contentWidth: 960px&lt;/code&gt;改成&lt;code&gt;@contentWidth: 90%&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同时&lt;code&gt;config&lt;/code&gt;文件中修改&lt;code&gt;cdn:false&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="个人建站" scheme="https://tianwenyu.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%BB%BA%E7%AB%99/"/>
    
    
      <category term="Hexo" scheme="https://tianwenyu.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>【评论文本分类】1.爬取评论数据</title>
    <link href="https://tianwenyu.github.io/text-classification/"/>
    <id>https://tianwenyu.github.io/text-classification/</id>
    <published>2017-12-01T12:29:30.000Z</published>
    <updated>2018-02-06T11:10:36.099Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ul><li>Ubuntu 16.04</li><li>Python 3.5</li></ul><h2 id="技术框架"><a href="#技术框架" class="headerlink" title="技术框架"></a>技术框架</h2><ul><li>Scrapy</li><li>Selenium</li><li>PhantomJS</li></ul><h2 id="需求目标"><a href="#需求目标" class="headerlink" title="需求目标"></a>需求目标</h2><p>对网址<code>http://liuyan.cjn.cn/index.html</code>进行数据爬取</p><p>本文爬虫有三层爬取，爬取结构层次如图所示，<br><a id="more"></a></p><ul><li>主页面</li></ul><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171227/KHcIeFJliL.jpg?imageslim" alt="mark"></p><ul><li>列表页面，需要利用<code>selenium+phantomJS</code>模拟点击<code>加载更多</code>按钮</li></ul><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171227/glJbE2JaJG.jpg?imageslim" alt="mark"></p><ul><li>详情页面</li></ul><p><img src="http://p15qizl76.bkt.clouddn.com/blog/171227/J0AjjkbG4l.jpg?imageslim" alt="mark"></p><ul><li>把<code>主页面</code>中的红框中的<code>各区（功能区）</code>、<code>政府部门</code>、<code>法检及其他单位</code>等作为一级类保存，然后依次爬取一级类中各个分类</li><li>进入到<code>列表页面</code>，因为此页面是动态加载，并且是简介列表，因此需要加载完所有列表进入到详情页面。</li><li>进入到<code>详情页面</code>，爬取相应内容。</li></ul><h2 id="设计方案"><a href="#设计方案" class="headerlink" title="设计方案"></a>设计方案</h2><p>动态爬取数据一般有两种方法</p><ul><li>分析包，构造Request</li><li>通过模拟浏览器行为加载页面</li></ul><p>通过尝试，第一种方法对于此网站不适合，采用第二种方法。</p><p>采用<code>Scrapy+Selenium+PhantomJS</code>来进行动态网页的爬取。</p><h3 id="Selenium"><a href="#Selenium" class="headerlink" title="Selenium"></a>Selenium</h3><p>Selenium是一个自动化测试工具，本文用到的是其<code>Webdriver</code>，用其来操作浏览器，可以操作多种主流浏览器，如Chrome，Firefox等，下文中的<code>PhantomJS</code>是一种无界面的浏览器。</p><h3 id="PhantomJS"><a href="#PhantomJS" class="headerlink" title="PhantomJS"></a>PhantomJS</h3><p>PhantomJS是一个无界面浏览器，提供JavaScript接口。通过这个工具，可以进行页面的加载、解析、操作等。</p><h3 id="爬取方案"><a href="#爬取方案" class="headerlink" title="爬取方案"></a>爬取方案</h3><ul><li>先爬取<code>主页面</code>各个主类（如<code>各区（功能区）</code>、<code>政府部门</code>等）下的子类链接，如（江岸区、江夏区等）</li><li>按照先前爬取的子类链接依次打开跳转到<code>列表界面</code>，然后利用<code>Selenium+PhantomJS</code>模拟浏览器动态加载完全部列表，解析出所有列表的链接，跳转到<code>详情页面</code></li><li>进入到<code>详情页面</code>，解析所要提取的内容</li></ul><h2 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h2><h3 id="安装Scrapy"><a href="#安装Scrapy" class="headerlink" title="安装Scrapy"></a>安装Scrapy</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pip3 install scrapy</span><br></pre></td></tr></table></figure><h3 id="安装PhantomJS"><a href="#安装PhantomJS" class="headerlink" title="安装PhantomJS"></a>安装PhantomJS</h3><ol><li><p>安装PhantomJS</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install phantomjs</span><br></pre></td></tr></table></figure></li><li><p>apt-get会安装不完整，需要安装以下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install nodejs-legacy</span><br><span class="line">sudo apt-get install npm</span><br><span class="line">sudo npm -g install phantomjs-prebuilt</span><br></pre></td></tr></table></figure></li></ol><h3 id="安装Selenium"><a href="#安装Selenium" class="headerlink" title="安装Selenium"></a>安装Selenium</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pip3 install selenium</span><br></pre></td></tr></table></figure><h3 id="使用Scrapy"><a href="#使用Scrapy" class="headerlink" title="使用Scrapy"></a>使用Scrapy</h3><ol><li><p>创建新工程</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scrapy startproject xxxx</span><br></pre></td></tr></table></figure></li><li><p>编辑<code>items.py</code>文件</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> Item</span><br><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> Field</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MessageboardspiderItem</span><span class="params">(Item)</span>:</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line"></span><br><span class="line">    dir_name=Field()</span><br><span class="line">    url=Field()</span><br><span class="line">    title=Field()</span><br><span class="line">    domain=Field()</span><br><span class="line">    type=Field()</span><br><span class="line">    content=Field()</span><br><span class="line">​</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">3.</span>  编写Spider</span><br><span class="line"></span><br><span class="line">    流程：</span><br><span class="line"></span><br><span class="line">    - 先通过scrapy爬取`主页面`上的所有子分类链接，</span><br><span class="line"></span><br><span class="line">    - 然后依次利用`PhantomJS`模拟点击`列表页面`的`加载更多`按钮，动态加载所有列表项，然后保存网页源码，抽取出其中的列表项的链接，进入`详情页面`</span><br><span class="line"></span><br><span class="line">      此两过程的代码都在`parse(self,response)`方法中</span><br><span class="line"></span><br><span class="line">    - 通过`parse_detailed_remark(self,response)`方法，解析出需要的内容</span><br><span class="line"></span><br><span class="line">    【注】目前版本爬取`主页面`上不同的主类需要手动改动`baseDir`与`self.start_urls`</span><br><span class="line"></span><br><span class="line">    ```python</span><br><span class="line">    <span class="keyword">import</span> os</span><br><span class="line">    <span class="keyword">import</span> stat</span><br><span class="line">    <span class="keyword">import</span> scrapy</span><br><span class="line">    <span class="keyword">import</span> time</span><br><span class="line">    <span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">    <span class="keyword">from</span> scrapy.selector <span class="keyword">import</span> Selector</span><br><span class="line">    <span class="keyword">from</span> scrapy.http <span class="keyword">import</span> HtmlResponse</span><br><span class="line">    <span class="keyword">from</span> messageBoardSpider.items <span class="keyword">import</span> MessageboardspiderItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    baseDir = <span class="string">'/home/t/dataset/msgBoard/department/'</span><span class="comment">#爬取不同主分类，需要手动改动</span></span><br><span class="line">    baseUrl=<span class="string">'http://liuyan.cjn.cn'</span></span><br><span class="line">    <span class="keyword">global</span> subclass_name</span><br><span class="line">    <span class="keyword">global</span> brower</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DistrictSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">        name=<span class="string">'spider'</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">            <span class="keyword">global</span> brower</span><br><span class="line">            self.start_urls=[<span class="string">'http://liuyan.cjn.cn/forum/list?fid=4'</span>]<span class="comment">#爬取不同主分类，需要手动改动</span></span><br><span class="line">            brower=webdriver.PhantomJS()<span class="comment">#创建PhantomJS浏览器</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self,response)</span>:</span></span><br><span class="line">            <span class="keyword">global</span> brower</span><br><span class="line">            <span class="keyword">global</span> subclass_name</span><br><span class="line">            </span><br><span class="line">            subclasses=response.xpath(<span class="string">'/html/body/div[7]/ul/li/b/a'</span>) <span class="comment">#解析出所有子分类</span></span><br><span class="line">            <span class="keyword">for</span> subclass <span class="keyword">in</span> subclasses: <span class="comment">#逐条解析子分类</span></span><br><span class="line"></span><br><span class="line">                subclass_name=subclass.xpath(<span class="string">'text()'</span>).extract() <span class="comment">#解析</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">#make district directory</span></span><br><span class="line">                self.mkdirs(baseDir+subclass_name[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">                <span class="comment">#extrat new link</span></span><br><span class="line">                    link=subclass.xpath(<span class="string">'@href'</span>).extract()<span class="comment">#解析出子类的链接</span></span><br><span class="line">                <span class="comment">#joint link</span></span><br><span class="line">                link=str(baseUrl+link[<span class="number">0</span>].split(<span class="string">'..'</span>)[<span class="number">1</span>])<span class="comment">#拼接链接</span></span><br><span class="line"></span><br><span class="line">                brower.get(link)<span class="comment">#利用PhantomJS打开链接</span></span><br><span class="line">                <span class="comment">#进行动态解析，直到没有'加载更多'按钮之后停止</span></span><br><span class="line">                <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        more=brower.find_element_by_id(<span class="string">'show_more'</span>)<span class="comment">#找到'加载更多'按钮</span></span><br><span class="line">                        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">                        more.click()</span><br><span class="line">                        time.sleep(<span class="number">0.5</span>)</span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        <span class="keyword">with</span> open(baseDir+subclass_name[<span class="number">0</span>]+<span class="string">'/web_page.txt'</span>,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                            f.write(brower.page_source)</span><br><span class="line">                        print(<span class="string">'ending'</span>)</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                        </span><br><span class="line">                <span class="comment">#对加载完后的源码进行解析，解析出列表标题</span></span><br><span class="line">                items=brower.find_elements_by_xpath(<span class="string">'//*[@id="list_content"]/li/h2/b/a'</span>)</span><br><span class="line">                <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">       <span class="comment">#解析出列表标题链接</span></span><br><span class="line">                    title_link=item.get_attribute(<span class="string">'href'</span>)</span><br><span class="line">                    print(title_link+<span class="string">'.........'</span>)</span><br><span class="line">                    <span class="keyword">yield</span> scrapy.Request(url=title_link,callback=self.parse_detailed_remark)</span><br><span class="line">                    </span><br><span class="line">        <span class="comment">#解析详情页面</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse_detailed_remark</span><span class="params">(self,response)</span>:</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">global</span> subclass_name</span><br><span class="line">            item=MessageboardspiderItem()</span><br><span class="line">            item[<span class="string">'dir_name'</span>]=subclass_name[<span class="number">0</span>]</span><br><span class="line">            item[<span class="string">'url'</span>]=response.url</span><br><span class="line">            item[<span class="string">'title'</span>]=response.xpath(<span class="string">'/html/body/div[6]/h2/b/text()'</span>).extract()</span><br><span class="line">            item[<span class="string">'domain'</span>]=response.xpath(<span class="string">'/html/body/div[6]/h3/em[1]/a/text()'</span>).extract()</span><br><span class="line">            item[<span class="string">'type'</span>]=response.xpath(<span class="string">'/html/body/div[6]/h3/em[2]/a/text()'</span>).extract()</span><br><span class="line">            item[<span class="string">'content'</span>]=response.xpath(<span class="string">'//*[@id="zoom"]/text()'</span>).extract()</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">mkdirs</span><span class="params">(self,path)</span>:</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">                os.makedirs(path)</span><br><span class="line">                os.chmod(path,stat.S_IRWXU|stat.S_IRWXG|stat.S_IRWXO)</span><br></pre></td></tr></table></figure><ol><li><p>编辑<code>pipelines.py</code>文件</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line">baseDir = <span class="string">'/home/t/dataset/msgBoard/department/'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DistrictPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> codecs.open(baseDir+item[<span class="string">'dir_name'</span>]+<span class="string">'/data.json'</span>,<span class="string">'a+'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            self.file=f</span><br><span class="line">            line=json.dumps(dict(item),ensure_ascii=<span class="keyword">False</span>)+<span class="string">'\n'</span></span><br><span class="line">            self.file.write(line)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> item</span><br></pre></td></tr></table></figure></li><li><p>编辑<code>settings.py</code>文件</p><p>编辑pipelines的设置，把如下内容的注释去掉即可</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#ITEM_PIPELINES = &#123;</span></span><br><span class="line"><span class="comment">#    'messageBoardSpider.pipelines.DistrictPipeline': 300,</span></span><br><span class="line"><span class="comment">#&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>运行爬虫</p><p>在项目根目录下新建一个<code>main.py</code>文件，运行爬虫执行该文件即可。</p><p><img src="http://p15qizl76.bkt.clouddn.com/blog/180206/FJdfk6Fjmj.png?imageslim" alt="mark"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.cmdline <span class="keyword">import</span> execute</span><br><span class="line">execute([<span class="string">'scrapy'</span>,<span class="string">'crawl'</span>,<span class="string">'spider'</span>])</span><br></pre></td></tr></table></figure><p>【注】<code>execute([&#39;scrapy&#39;,&#39;crawl&#39;,&#39;spider&#39;])</code></p><p>其中<code>spider</code>是爬虫名，按需更改即可。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Ubuntu 16.04&lt;/li&gt;
&lt;li&gt;Python 3.5&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;技术框架&quot;&gt;&lt;a href=&quot;#技术框架&quot; class=&quot;headerlink&quot; title=&quot;技术框架&quot;&gt;&lt;/a&gt;技术框架&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Scrapy&lt;/li&gt;
&lt;li&gt;Selenium&lt;/li&gt;
&lt;li&gt;PhantomJS&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;需求目标&quot;&gt;&lt;a href=&quot;#需求目标&quot; class=&quot;headerlink&quot; title=&quot;需求目标&quot;&gt;&lt;/a&gt;需求目标&lt;/h2&gt;&lt;p&gt;对网址&lt;code&gt;http://liuyan.cjn.cn/index.html&lt;/code&gt;进行数据爬取&lt;/p&gt;
&lt;p&gt;本文爬虫有三层爬取，爬取结构层次如图所示，&lt;br&gt;
    
    </summary>
    
      <category term="项目" scheme="https://tianwenyu.github.io/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="scrapy" scheme="https://tianwenyu.github.io/tags/scrapy/"/>
    
  </entry>
  
  <entry>
    <title>Virtualbox 下LVS-NAT模式集群部署</title>
    <link href="https://tianwenyu.github.io/linux-lvs/"/>
    <id>https://tianwenyu.github.io/linux-lvs/</id>
    <published>2017-12-01T12:29:30.000Z</published>
    <updated>2018-01-05T05:07:01.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统架构"><a href="#系统架构" class="headerlink" title="系统架构"></a>系统架构</h2><ul><li>虚拟机环境：VirtualBox</li><li>Linux系统：CentOS 7</li><li>模型：LVS-NAT</li><li>调度算法：RR</li></ul><p>【注】所有连接方式都采用<code>桥接</code>方式</p><table><thead><tr><th>主机</th><th>IP</th><th>角色</th></tr></thead><tbody><tr><td>Client</td><td>192.168.33.145</td><td>客户机，用来访问网页</td></tr><tr><td>VS</td><td>192.168.33.150</td><td>VIP，Virtual Ip对外提供的IP</td></tr><tr><td>VS</td><td>192.168.33.149</td><td>DIP，Director IP</td></tr><tr><td>RS1</td><td>192.168.33.148</td><td>Real Server IP，安装Nginx</td></tr><tr><td>RS2</td><td>192.168.33.147</td><td>Real Server IP，安装Nginx</td></tr></tbody></table><a id="more"></a><h2 id="客户机配置"><a href="#客户机配置" class="headerlink" title="客户机配置"></a>客户机配置</h2><h3 id="桥接IP设置"><a href="#桥接IP设置" class="headerlink" title="桥接IP设置"></a>桥接IP设置</h3><ol><li><p>打开<code>网络与共享中心</code></p></li><li><p>点击<code>更改适配器设置</code> </p><p><img src="http://img.blog.csdn.net/20171204231827222?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGl3ZWVueQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p></li><li><p>选择客户机（即物理机）网卡</p></li></ol><p><img src="http://img.blog.csdn.net/20171204231840284?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGl3ZWVueQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>4.打开<code>属性</code>，设置IPV4地址</p><p><img src="http://img.blog.csdn.net/20171204231850568?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGl3ZWVueQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><h2 id="虚拟机环境配置"><a href="#虚拟机环境配置" class="headerlink" title="虚拟机环境配置"></a>虚拟机环境配置</h2><h3 id="1-网卡模式设置"><a href="#1-网卡模式设置" class="headerlink" title="1.网卡模式设置"></a>1.网卡模式设置</h3><p>【注】所有Virtual Box虚拟机网络设置都要设置为<code>桥接</code>方式</p><ol><li><p>打开<code>控制-&gt;设置-&gt;网络</code></p></li><li><p><code>连接方式</code>选择<code>桥接网卡</code>，<code>高级-&gt;混杂模式</code>选<code>全部允许</code> </p><p><img src="http://img.blog.csdn.net/20171204232024897?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGl3ZWVueQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p></li></ol><h3 id="2-sudo命令配置"><a href="#2-sudo命令配置" class="headerlink" title="2.sudo命令配置"></a>2.<code>sudo</code>命令配置</h3><p>【注】以一台虚拟机为例，其余虚拟机与此类似</p><ol><li><p>切换到<code>root</code>用户</p><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">su <span class="number">-1</span></span><br></pre></td></tr></table></figure></li><li><p>添加<code>/etc/sudoers</code>文件写权限</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">chmod u+w <span class="regexp">/etc/</span>sudoers1</span><br></pre></td></tr></table></figure></li><li><p>编辑<code>/etc/sudoers</code></p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>sudoers1</span><br></pre></td></tr></table></figure></li></ol><p>找到<code>root ALL=(ALL) ALL</code>在下面添加<code>21751096_1 ALL=(ALL) ALL</code>，并保存退出</p><p><img src="http://img.blog.csdn.net/20171204232111043?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGl3ZWVueQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>4.撤销<code>/etc/sudoers</code>文件的写权限</p><p><code>bash chmod u-w /etc/sudoers</code></p><h2 id="Director配置"><a href="#Director配置" class="headerlink" title="Director配置"></a>Director配置</h2><h3 id="1-安装ipvsadm"><a href="#1-安装ipvsadm" class="headerlink" title="1.安装ipvsadm"></a>1.安装<code>ipvsadm</code></h3><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">sudo yum <span class="keyword">install</span> -y ipvsadm1</span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20171204232138345?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGl3ZWVueQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><h3 id="2-建立一个虚拟IP地址进行广播"><a href="#2-建立一个虚拟IP地址进行广播" class="headerlink" title="2.建立一个虚拟IP地址进行广播"></a>2.建立一个虚拟IP地址进行广播</h3><figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">sudo ifconfig enp<span class="number">0s3:0 192</span>.<span class="number">168.33.150/24</span></span><br></pre></td></tr></table></figure><h3 id="3-将该虚拟机地址添加到路由表"><a href="#3-将该虚拟机地址添加到路由表" class="headerlink" title="3.将该虚拟机地址添加到路由表"></a>3.将该虚拟机地址添加到路由表</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo<span class="built_in"> route </span><span class="builtin-name">add</span> -host 192.168.33.150 dev enp0s31</span><br></pre></td></tr></table></figure><h3 id="4-使用ipvsadm安装LVS服务"><a href="#4-使用ipvsadm安装LVS服务" class="headerlink" title="4.使用ipvsadm安装LVS服务"></a>4.使用<code>ipvsadm</code>安装LVS服务</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">ipvsadm</span> <span class="selector-tag">-At</span> 192<span class="selector-class">.168</span><span class="selector-class">.33</span><span class="selector-class">.150</span><span class="selector-pseudo">:80</span> <span class="selector-tag">-s</span> <span class="selector-tag">rr1</span></span><br></pre></td></tr></table></figure><h3 id="5-增加真实服务器"><a href="#5-增加真实服务器" class="headerlink" title="5.增加真实服务器"></a>5.增加真实服务器</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">ipvsadm</span> <span class="selector-tag">-at</span> 192<span class="selector-class">.168</span><span class="selector-class">.33</span><span class="selector-class">.150</span><span class="selector-pseudo">:80</span> <span class="selector-tag">-r</span> 192<span class="selector-class">.168</span><span class="selector-class">.33</span><span class="selector-class">.148</span> <span class="selector-tag">-g</span></span><br><span class="line"><span class="selector-tag">sudo</span> <span class="selector-tag">ipvsadm</span> <span class="selector-tag">-at</span> 192<span class="selector-class">.168</span><span class="selector-class">.33</span><span class="selector-class">.150</span><span class="selector-pseudo">:80</span> <span class="selector-tag">-r</span> 192<span class="selector-class">.168</span><span class="selector-class">.33</span><span class="selector-class">.147</span> <span class="selector-tag">-g12</span></span><br></pre></td></tr></table></figure><h3 id="6-设置DirectorIP"><a href="#6-设置DirectorIP" class="headerlink" title="6.设置DirectorIP"></a>6.设置DirectorIP</h3><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">sudo ifconfig enp0s3 <span class="number">192.168</span><span class="number">.33</span><span class="number">.149</span>/<span class="number">241</span></span><br></pre></td></tr></table></figure><h3 id="7-查看ifconfig设置"><a href="#7-查看ifconfig设置" class="headerlink" title="7.查看ifconfig设置"></a>7.查看<code>ifconfig</code>设置</h3><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">sudo ifco<span class="symbol">nfig1</span></span><br></pre></td></tr></table></figure><p>所有设置如图</p><p><img src="http://img.blog.csdn.net/20171204232204048?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGl3ZWVueQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><h2 id="Real-Server配置"><a href="#Real-Server配置" class="headerlink" title="Real Server配置"></a>Real Server配置</h2><h3 id="1-安装nginx服务"><a href="#1-安装nginx服务" class="headerlink" title="1.安装nginx服务"></a>1.安装<code>nginx</code>服务</h3><p>【注】需要在<code>21751096_2</code>和<code>21751096_3</code>两台RealServer上安装<code>nginx</code>服务，以其中一台为例</p><ol><li><p>使用<code>yum</code>安装<code>nginx</code>,需要安装<code>nginx</code>的库</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">cd /etc/yum<span class="selector-class">.repos</span><span class="selector-class">.d</span>/nginx.repo</span><br><span class="line">sudo rpm -Uvh http:<span class="comment">//nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm12</span></span><br></pre></td></tr></table></figure></li><li><p>编辑<code>nginx.repo</code>文件</p><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/yum.repos.d/nginx.repo</span><br><span class="line"></span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/7/x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1123456</span><br></pre></td></tr></table></figure></li><li><p>使用<code>yum</code>安装<code>nginx</code></p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">sudo yum <span class="keyword">install</span> nginx1</span><br></pre></td></tr></table></figure></li><li><p>安装完成后启动<code>nginx</code>服务</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>nginx start1</span><br></pre></td></tr></table></figure></li><li><p>修改<code>index.html</code>首页区分两个nginx服务器</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sudo vim <span class="regexp">/usr/</span>share<span class="regexp">/nginx/</span>html<span class="regexp">/index.html1</span></span><br></pre></td></tr></table></figure><p>修改内容如下</p></li></ol><p>   <img src="http://img.blog.csdn.net/20171204232221573?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGl3ZWVueQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><ol><li><p>查看是否启动服务</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">curl -<span class="selector-tag">i</span> localhost1</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-IP设置"><a href="#2-IP设置" class="headerlink" title="2.IP设置"></a>2.IP设置</h3><ol><li>切换到<code>root</code>账户</li></ol><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">su <span class="number">-1</span></span><br></pre></td></tr></table></figure><ol><li>设置虚拟IP</li></ol><figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">ifconfig lo:<span class="number">0 192.168.33</span>.<span class="number">150/361</span></span><br></pre></td></tr></table></figure><ol><li>添加到路由表</li></ol><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">route</span> <span class="selector-tag">add</span> <span class="selector-tag">-host</span> 192<span class="selector-class">.168</span><span class="selector-class">.33</span><span class="selector-class">.150</span> <span class="selector-tag">dev</span> <span class="selector-tag">lo</span><span class="selector-pseudo">:01</span></span><br></pre></td></tr></table></figure><ol><li>设置IPV4转发</li></ol><p><code>bash echo &quot;1&quot; &gt;/proc/sys/net/ipv4/ip_forward</code></p><ol><li>设置RS1的IP</li></ol><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">ifconfig enp0s3 <span class="number">192.168</span><span class="number">.33</span><span class="number">.148</span>/<span class="number">241</span></span><br></pre></td></tr></table></figure><ol><li>查看<code>ifconfig</code>设置</li></ol><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">ifco<span class="symbol">nfig1</span></span><br></pre></td></tr></table></figure><p>全部设置如图所示</p><p><img src="http://img.blog.csdn.net/20171204232238350?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGl3ZWVueQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><h2 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h2><p>在浏览器中输入<code>192.168.33.150</code></p><p>第一次显示Real Sever 1的页面</p><p><img src="http://img.blog.csdn.net/20171204232312949?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGl3ZWVueQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>刷新后显示Real Server 2的页面</p><p><img src="http://img.blog.csdn.net/20171204232326590?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGl3ZWVueQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;系统架构&quot;&gt;&lt;a href=&quot;#系统架构&quot; class=&quot;headerlink&quot; title=&quot;系统架构&quot;&gt;&lt;/a&gt;系统架构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;虚拟机环境：VirtualBox&lt;/li&gt;
&lt;li&gt;Linux系统：CentOS 7&lt;/li&gt;
&lt;li&gt;模型：LVS-NAT&lt;/li&gt;
&lt;li&gt;调度算法：RR&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【注】所有连接方式都采用&lt;code&gt;桥接&lt;/code&gt;方式&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;主机&lt;/th&gt;
&lt;th&gt;IP&lt;/th&gt;
&lt;th&gt;角色&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Client&lt;/td&gt;
&lt;td&gt;192.168.33.145&lt;/td&gt;
&lt;td&gt;客户机，用来访问网页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS&lt;/td&gt;
&lt;td&gt;192.168.33.150&lt;/td&gt;
&lt;td&gt;VIP，Virtual Ip对外提供的IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VS&lt;/td&gt;
&lt;td&gt;192.168.33.149&lt;/td&gt;
&lt;td&gt;DIP，Director IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RS1&lt;/td&gt;
&lt;td&gt;192.168.33.148&lt;/td&gt;
&lt;td&gt;Real Server IP，安装Nginx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RS2&lt;/td&gt;
&lt;td&gt;192.168.33.147&lt;/td&gt;
&lt;td&gt;Real Server IP，安装Nginx&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://tianwenyu.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://tianwenyu.github.io/tags/Linux/"/>
    
      <category term="VirtualBox" scheme="https://tianwenyu.github.io/tags/VirtualBox/"/>
    
      <category term="LVS" scheme="https://tianwenyu.github.io/tags/LVS/"/>
    
  </entry>
  
</feed>
